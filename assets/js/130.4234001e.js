(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{446:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("设计模式是在软件开发中常用的解决问题的方法和经验总结。它们提供了一套被广泛认可的解决方案, 用于解决在软件设计和开发过程中常见的问题。设计模式通过定义了一些通用的架构模式、结构模式和行为模式, 帮助开发人员更好地组织和管理代码, 并提高代码的可维护性、可扩展性和重用性。")]),s._v(" "),t("p",[s._v("另外可以看看 "),t("a",{attrs:{href:"https://coolshell.cn/articles/21672.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("我做系统架构的一些原则"),t("OutboundLink")],1),s._v(" 很有思考深度")])]),s._v(" "),t("h2",{attrs:{id:"看懂-uml-类图和时序图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#看懂-uml-类图和时序图"}},[s._v("#")]),s._v(" 看懂 UML 类图和时序图")]),s._v(" "),t("blockquote",[t("p",[s._v("更多内容可见: "),t("a",{attrs:{href:"https://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html"),t("OutboundLink")],1)])]),s._v(" "),t("p",[t("strong",[s._v("示例")]),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/jacky1234/picArchieve/master/uPic/shrpmn.jpg",alt:"uml_class_struct"}})]),s._v(" "),t("ul",[t("li",[s._v("车的类图结构为"),t("code",[s._v("<<abstract>>")]),s._v(", 表示车是一个抽象类；")]),s._v(" "),t("li",[s._v("它有两个继承类: 小汽车和自行车；它们之间的关系为实现关系, 使用带空心箭头的虚线表示；")]),s._v(" "),t("li",[s._v("小汽车为与 SUV 之间也是继承关系, 它们之间的关系为泛化关系, 使用带空心箭头的实线表示；")]),s._v(" "),t("li",[s._v("小汽车与发动机之间是组合关系, 使用带实心箭头的实线表示；")]),s._v(" "),t("li",[s._v("学生与班级之间是聚合关系, 使用带空心箭头的实线表示；")]),s._v(" "),t("li",[s._v("学生与身份证之间为关联关系, 使用一根实线表示；")]),s._v(" "),t("li",[s._v("学生上学需要用到自行车, 与自行车是一种依赖关系, 使用带箭头的虚线表示；")])]),s._v(" "),t("p",[t("strong",[t("a",{attrs:{href:"https://www.kancloud.cn/digest/xing-designpattern/143734",target:"_blank",rel:"noopener noreferrer"}},[s._v("说明"),t("OutboundLink")],1)])]),s._v(" "),t("ol",[t("li",[s._v("可见性表示该属性对于类外的元素而言是否可见, 包括公有(public)、私有(private)和受保护(protected)三种, 在类图中分别用符号+、- 和 # 表示。")])]),s._v(" "),t("h3",{attrs:{id:"聚合与组合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合与组合"}},[s._v("#")]),s._v(" 聚合与组合")]),s._v(" "),t("p",[s._v('在 UML(统一建模语言)中, "聚合"(Aggregation)和"组合"(Composition)是用来表示类之间的关联关系的两个术语。')]),s._v(" "),t("p",[s._v("聚合表示类之间的一种关联关系, 其中一个类(整体)包含另一个类(部分)。聚合关系是一种弱关系, 意味着整体对象和部分对象可以存在独立于彼此的生命周期。聚合关系通常使用一个带空心菱形的线表示, 该菱形指向整体对象。")]),s._v(" "),t("p",[s._v("组合表示类之间的一种关联关系, 其中一个类(整体)包含另一个类(部分)。组合关系是一种强关系, 意味着整体对象和部分对象的生命周期是紧密相连的, 部分对象不能独立存在。如果整体对象被销毁, 部分对象也将被销毁。组合关系通常使用一个带实心菱形的线表示, 该菱形指向整体对象。")]),s._v(" "),t("p",[s._v('简而言之, 聚合关系表示"整体-部分"的关系, 而组合关系表示"整体-部分"的强关系, 部分对象与整体对象有更紧密的依赖关系。')]),s._v(" "),t("h2",{attrs:{id:"设计模式的六大原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计模式的六大原则"}},[s._v("#")]),s._v(" 设计模式的六大原则")]),s._v(" "),t("blockquote",[t("p",[s._v("更多内容可见: "),t("a",{attrs:{href:"https://www.kancloud.cn/digest/xing-designpattern/143718",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.kancloud.cn/digest/xing-designpattern/143718"),t("OutboundLink")],1)])]),s._v(" "),t("ol",[t("li",[s._v("单一职责原则")]),s._v(" "),t("li",[s._v("开闭原则\n"),t("blockquote",[t("p",[s._v("对于扩展是开放的, 但是对于修改是封闭的。")])])]),s._v(" "),t("li",[s._v("里氏替换原则\n"),t("blockquote",[t("p",[s._v("里氏替换原则是继承复用的基石。只有当衍生类可以替换掉基类, 软件单位的功能不会受到影响时, 基类才能真正的被复用, 而衍生类也才能够在基类的基础上增加新的行为。")])])]),s._v(" "),t("li",[s._v("依赖倒置原则\n"),t("blockquote",[t("p",[s._v("在 java 中的表现是: 模块间的依赖通过抽象发生, 实体类之间不发生直接的依赖关系, 其依赖关系是通过接口或抽象类产生。")])])]),s._v(" "),t("li",[s._v("接口隔离原则\n"),t("blockquote",[t("p",[s._v("接口隔离的目的是系统解开耦合, 从而容易重构, 更改和重新部署 。")])])]),s._v(" "),t("li",[s._v("迪米特原则")])]),s._v(" "),t("h2",{attrs:{id:"spi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spi"}},[s._v("#")]),s._v(" SPI")]),s._v(" "),t("blockquote",[t("p",[s._v("SPI 是 Java 平台提供的一种机制, 允许应用程序在运行时动态加载和发现实现某个接口的服务提供者\n通常我们会使用 google 的 "),t("a",{attrs:{href:"https://github.com/google/auto/tree/main/service",target:"_blank",rel:"noopener noreferrer"}},[s._v("AutoService"),t("OutboundLink")],1),s._v(" 来简化整个过程 SPI 过程.")])]),s._v(" "),t("p",[t("strong",[s._v("maven 版本")])]),s._v(" "),t("p",[s._v("你可以在 "),t("a",{attrs:{href:"https://github.com/google/auto/tree/main/service",target:"_blank",rel:"noopener noreferrer"}},[s._v("mvnrepository"),t("OutboundLink")],1),s._v(" 查看最新的 AutoService 版本")]),s._v(" "),t("p",[t("strong",[s._v("Google Autoservice 的原理")]),s._v(":")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("定义服务接口: 首先, 您需要定义一个服务接口, 该接口定义了所需的功能或行为。接口通常在一个单独的库或模块中定义, 并作为提供者和使用者之间的契约。")])]),s._v(" "),t("li",[t("p",[s._v("实现服务提供者: 接下来, 您需要实现服务接口的一个或多个具体实现。每个实现都需要提供一个无参数的构造函数, 并且通常在独立的模块中实现。")])]),s._v(" "),t("li",[t("p",[s._v("创建 SPI 配置文件: 为了将服务提供者注册到应用程序中, 您需要创建一个 SPI 配置文件。该配置文件是一个文本文件, 位于 META-INF/services 目录下, 文件名与服务接口的全限定名相同。在配置文件中, 每一行包含一个服务提供者的完全限定名。")])]),s._v(" "),t("li",[t("p",[s._v("使用 Google Autoservice 注解: 为了简化服务提供者的注册过程, 您可以使用 Google Autoservice 库中提供的"),t("code",[s._v("@AutoService")]),s._v(" 注解。将此注解应用于服务提供者的实现类上, 它将自动生成 SPI 配置文件, 并将服务提供者自动注册到应用程序中。")])]),s._v(" "),t("li",[t("p",[s._v("加载和使用服务提供者: 在应用程序中, 您可以使用 Java 的 ServiceLoader 类来加载和使用服务提供者。ServiceLoader 类允许您动态加载服务提供者的实现, 并在运行时获取它们的实例。")])])]),s._v(" "),t("p",[s._v("通过使用 Google Autoservice 库, 您可以简化 SPI 的使用过程, 自动注册和发现服务提供者, 从而实现更灵活和可扩展的应用程序架构。")]),s._v(" "),t("h2",{attrs:{id:"aop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[s._v("#")]),s._v(" AOP")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("AOP 它提倡的是针对同一类问题的统一处理.\n那么 AOP 这种编程思想有什么用呢, 一般来说, 主要用于不想侵入原有代码的场景中, 例如 SDK 需要无侵入的在宿主中插入一些代码, 做日志埋点、性能监控、动态权限控制、甚至是代码调试等等。")])]),s._v(" "),t("p",[s._v("Spring DI(依赖注入) IOC(控制反转)")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/entry/589fd852128fe100659443b8",target:"_blank",rel:"noopener noreferrer"}},[s._v("面向切面编程。"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("有一些工具和库帮助我们使用 AOP:")]),s._v(" "),t("ul",[t("li",[s._v("AspectJ: 一个 JavaTM 语言的面向切面编程的无缝扩展(适用 Android)。")]),s._v(" "),t("li",[s._v("Jake 大神的 Hugo,"),t("a",{attrs:{href:"https://github.com/JakeWharton/hugo",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/JakeWharton/hugo"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("Javassist for Android: 用于字节码操作的知名 java 类库 Javassist 的 Android 平台移植版。")]),s._v(" "),t("li",[s._v("DexMaker: Dalvik 虚拟机上, 在编译期或者运行时生成代码的 Java API。")]),s._v(" "),t("li",[s._v("ASMDEX: 一个类似 ASM 的字节码操作库, 运行在 Android 平台, 操作 Dex 字节码。")])]),s._v(" "),t("h2",{attrs:{id:"结构型设计模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构型设计模式"}},[s._v("#")]),s._v(" 结构型设计模式")]),s._v(" "),t("h3",{attrs:{id:"mvc-mvp-mvvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvc-mvp-mvvm"}},[s._v("#")]),s._v(" MVC MVP MVVM")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("MVC(Model-View-Controller), MVP(Model-View-Presenter)和 MVVM(Model-View-ViewModel)是三种常见的架构模式。它们被广泛应用于各种编程语言和框架中, 以帮助开发人员组织和管理代码, 并实现良好的可维护性和可扩展性。")]),s._v(" "),t("p",[s._v("他们间的区别可以参考:")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/38108311",target:"_blank",rel:"noopener noreferrer"}},[s._v("MVC, MVP 和 MVVM 模式如何选择？"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.geeksforgeeks.org/difference-between-mvc-mvp-and-mvvm-architecture-pattern-in-android/",target:"_blank",rel:"noopener noreferrer"}},[s._v("difference-between-mvc-mvp-and-mvvm-architecture-pattern-in-android"),t("OutboundLink")],1)])])]),s._v(" "),t("h4",{attrs:{id:"mvc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[s._v("#")]),s._v(" MVC")]),s._v(" "),t("p",[s._v("MVC 是一种经典的设计模式, 用于将应用程序的逻辑、数据和用户界面相互分离。它包括以下三个核心组件:")]),s._v(" "),t("ul",[t("li",[s._v("视图(View): It is the UI(User Interface) layer that holds components that are visible on the screen")]),s._v(" "),t("li",[s._v("控制器(Controller): This component establishes the relationship between the View and the Model")]),s._v(" "),t("li",[s._v("模型(Model): This component stores the application data.")])]),s._v(" "),t("p",[s._v("在传统的 MVC 模式中, View 和 Controller 是紧密耦合的, 它们之间存在双向的交互。然而, 在 Android 中, 通常使用了一种变种的 MVC 模式, 称为 Passive View。在 Passive View 中, View 不直接与 Model 进行交互, 而是通过 Controller 来间接操作和更新 Model。")]),s._v(" "),t("p",[s._v("一、mvc 的结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/jacky1234/picArchieve/master/uPic/OxN8jk.jpg",alt:"mvc"}})]),s._v(" "),t("p",[s._v("二、MVC 的调用关系")]),s._v(" "),t("p",[s._v("用户的对 View 操作以后, View 捕获到这个操作, 会把处理的权利交移给 Controller(Pass calls)；Controller 接着会执行相关的业务逻辑, 这些业务逻辑可能需要对 Model 进行相应的操作；当 Model 变更了以后, 会通过观察者模式(Observer Pattern)通知 View；View 通过观察者模式收到 Model 变更的消息以后, 会向 Model 请求最新的数据, 然后重新更新界面。")]),s._v(" "),t("h5",{attrs:{id:"优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),t("p",[s._v("一、优点")]),s._v(" "),t("p",[s._v("1、把业务逻辑全部分离到 Controller 中, 模块化程度高")]),s._v(" "),t("blockquote",[t("p",[s._v("当业务逻辑变更的时候, 不需要变更 View 和 Model, 只需要 Controller 换成另外一个 Controller 就行了(Swappable Controller)。")])]),s._v(" "),t("p",[s._v("2、观察者模式可以做到多视图同时更新")]),s._v(" "),t("p",[s._v("二、缺点")]),s._v(" "),t("p",[s._v("1、Controller 测试困难")]),s._v(" "),t("blockquote",[t("p",[s._v("因为视图同步操作是由 View 自己执行, 而 View 只能在有 UI 的环境下运行。在没有 UI 环境下对 Controller 进行单元测试的时候, Controller 业务逻辑的正确性是无法验证的: Controller 更新 Model 的时候, 无法对 View 的更新操作进行断言。")])]),s._v(" "),t("p",[s._v("2、View 无法组件化")]),s._v(" "),t("blockquote",[t("p",[s._v("View 是强依赖特定的 Model 的, 如果需要把这个 View 抽出来作为一个另外一个应用程序可复用的组件就困难了。因为不同程序的的 Domain Model 是不一样的")])]),s._v(" "),t("h4",{attrs:{id:"mvp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvp"}},[s._v("#")]),s._v(" MVP")]),s._v(" "),t("p",[t("strong",[s._v("MVP 由以下三个组件组成")])]),s._v(" "),t("ul",[t("li",[s._v("Model(模型): 用于存储数据的层。它负责处理领域逻辑(现实世界的业务规则)并与数据库和网络层进行通信。")]),s._v(" "),t("li",[s._v("View(视图): 用户界面(UI)层。它提供数据的可视化, 并跟踪用户的操作, 以便通知 Presenter。")]),s._v(" "),t("li",[s._v("Presenter(展示者): 从模型中获取数据并应用 UI 逻辑以决定要显示的内容。它管理视图的状态, 并根据来自视图的用户输入通知采取行动。")])]),s._v(" "),t("p",[s._v("和 MVC 模式一样, 用户对 View 的操作都会从 View 交移给 Presenter。Presenter 同样的会执行相应的业务逻辑, 并且对 Model 进行相应的操作；而这时候 Model 也是通过观察者模式把自己变更的消息传递出去, 但是是传给 Presenter 而不是 View。Presenter 获取到 Model 变更的消息以后, "),t("RText",{attrs:{text:"通过 View 提供的接口更新界面",color:"red"}}),s._v(". 如下图:")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jacky1234/picArchieve@master/uPic/20230607_204217_XqBRZI.jpg",alt:"MVP"}})]),s._v(" "),t("p",[s._v("二、特点")]),s._v(" "),t("ol",[t("li",[s._v("各部分之间的通信, 都是双向的。")]),s._v(" "),t("li",[s._v("View 与 Model 不发生联系, 都通过 Presenter 传递。")]),s._v(" "),t("li",[s._v('View 非常薄, 不部署任何业务逻辑, 称为"被动视图"(Passive View), 即没有任何主动性, 而 Presenter 非常厚, 所有逻辑都部署在那里。')])]),s._v(" "),t("h5",{attrs:{id:"优缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-2"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),t("p",[s._v("一、优点")]),s._v(" "),t("p",[s._v("1、便于测试")]),s._v(" "),t("blockquote",[t("p",[s._v("Presenter 对 View 是通过接口进行, 在对 Presenter 进行不依赖 UI 环境的单元测试的时候。可以通过 Mock 一个 View 对象, 这个对象只需要实现了 View 的接口即可。然后依赖注入到 Presenter 中, 单元测试的时候就可以完整的测试 Presenter 业务逻辑的正确性。这里根据上面的例子给出了 Presenter 的单元测试样例。")])]),s._v(" "),t("p",[s._v("2、View 可以进行组件化")]),s._v(" "),t("blockquote",[t("p",[s._v("在 MVP 当中, View 不依赖 Model。这样就可以让 View 从特定的业务场景中脱离出来, 可以说 View 可以做到对业务逻辑完全无知。它只需要提供一系列接口提供给上层操作。这样就可以做高度可复用的 View 组件。")])]),s._v(" "),t("p",[s._v("二、缺点")]),s._v(" "),t("p",[s._v("1、Presenter 中除了业务逻辑以外, 还有大量的 View->Model, Model->View 的手动同步逻辑, 造成 Presenter 比较笨重, 维护起来会比较困难")]),s._v(" "),t("h4",{attrs:{id:"mvvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[s._v("#")]),s._v(" MVVM")]),s._v(" "),t("p",[s._v("TODO")]),s._v(" "),t("h3",{attrs:{id:"桥接模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#桥接模式"}},[s._v("#")]),s._v(" 桥接模式")]),s._v(" "),t("p",[s._v("桥接模式(Bridge Pattern): 将抽象部分与它的实现部分分离, 使它们都可以独立地变化。它是一种对象结构型模式, 又称为柄体(Handle and Body)模式或接口(Interface)模式。\n"),t("strong",[s._v("任何多维度变化类或者说多个树状类之间的耦合都可以使用桥接模式来实现解耦。")])]),s._v(" "),t("p",[s._v("桥接模式包含如下角色:")]),s._v(" "),t("ul",[t("li",[s._v("Abstraction: 抽象类")]),s._v(" "),t("li",[s._v("RefinedAbstraction: 扩充抽象类")]),s._v(" "),t("li",[s._v("Implementor: 实现类接口")]),s._v(" "),t("li",[s._v("ConcreteImplementor: 具体实现类")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jacky1234/picArchieve@master/uPic/20230607_211250_HVrz9M.jpg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"适配器模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式"}},[s._v("#")]),s._v(" 适配器模式")]),s._v(" "),t("p",[s._v("适配器模式包含如下角色:")]),s._v(" "),t("ul",[t("li",[s._v("Target: 目标抽象类")]),s._v(" "),t("li",[s._v("Adapter: 适配器类")]),s._v(" "),t("li",[s._v("Adaptee: 适配者类")]),s._v(" "),t("li",[s._v("Client: 客户类")])]),s._v(" "),t("p",[t("strong",[s._v("对象适配器")]),s._v(" "),t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/Adapter.jpg",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("类适配器")]),s._v(" "),t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/Adapter_classModel.jpg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"装饰模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装饰模式"}},[s._v("#")]),s._v(" 装饰模式")]),s._v(" "),t("p",[s._v("装饰模式(Decorator Pattern) : 动态地给一个对象增加一些额外的职责(Responsibility), 就"),t("strong",[s._v("增加对象功能来说, 装饰模式比生成子类实现更为灵活")]),s._v("。"),t("em",[s._v("其别名也可以称为包装器(Wrapper), 与适配器模式的别名相同, 但它们适用于不同的场合。")])]),s._v(" "),t("p",[t("strong",[s._v("装饰模式包含如下角色")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("Component: 抽象构件")]),s._v(" "),t("li",[s._v("ConcreteComponent: 具体构件")]),s._v(" "),t("li",[s._v("Decorator: 抽象装饰类")]),s._v(" "),t("li",[s._v("ConcreteDecorator: 具体装饰类")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/Decorator.jpg",alt:""}})]),s._v(" "),t("p",[s._v("示例参考: 一下鸿洋老师的解决方案了, 大家可以看他的文章: "),t("a",{attrs:{href:"http://blog.csdn.net/lmj623565791/article/details/51854533",target:"_blank",rel:"noopener noreferrer"}},[s._v("优雅的为 RecyclerView 添加 HeaderView 和 FooterView"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/jacky1234/JackLogger",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考我的 github 项目-JackLogger"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"代理模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理模式"}},[s._v("#")]),s._v(" 代理模式")]),s._v(" "),t("p",[t("strong",[s._v("分类")])]),s._v(" "),t("ul",[t("li",[s._v("静态代理: 运行之前代理类的 class 编译文件已经存在")]),s._v(" "),t("li",[s._v("动态代理: 通过反射动态的生成代理者对象。(在执行阶段才知道代理谁)")])]),s._v(" "),t("p",[t("strong",[s._v("模式结构")]),s._v("\n_代理模式包含如下角色: _")]),s._v(" "),t("ul",[t("li",[s._v("Subject: 抽象主题角色")]),s._v(" "),t("li",[s._v("Proxy: 代理主题角色")]),s._v(" "),t("li",[s._v("RealSubject: 真实主题角色")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/Proxy.jpg",alt:"Proxy"}})]),s._v(" "),t("h4",{attrs:{id:"静态代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态代理"}},[s._v("#")]),s._v(" 静态代理")]),s._v(" "),t("p",[t("strong",[s._v("一个静态代理示例")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lawyer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),s._v(" mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//持有一个具体被代理者的引用")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lawyer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),s._v(" mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mLawsuit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("burden")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("burden")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finish")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mLawsuit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finish")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xiaomin")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Client")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),s._v(" mLawyer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lawyer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xiaomin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mLawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mLawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("burden")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mLawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mLawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finish")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br")])]),t("h4",{attrs:{id:"动态代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态代理"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://juejin.im/post/5ad3e6b36fb9a028ba1fee6a",target:"_blank",rel:"noopener noreferrer"}},[s._v("动态代理"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("动态代理是一种较为高级的代理模式, 它的典型应用就是 Spring AOP")]),s._v(" "),t("li",[s._v("如果按照这种方法使用代理模式, 那么真实主题角色必须是事先已经存在的, 并将其作为代理对象的内部成员属性。如果一个真实主题角色必须对应一个代理主题角色, 这将导致系统中的类个数急剧增加, 因此需要想办法减少系统中类的个数, 此外, 如何在事先不知道真实主题角色的情况下使用代理主题角色, 这都是动态代理需要解决的问题")]),s._v(" "),t("li",[s._v("使用上, 通过 Proxy 的 static 方法 newProxyInstance, 传入 InvocationHandler(包含了真实主题对象), 请看下面的例子")])]),s._v(" "),t("RText",{attrs:{text:"动态代理示例"}}),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Client")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造小明")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),s._v(" xiaomin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xiaomin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造一个动态代理")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InvocationHandler")]),s._v(" proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DynamicProxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xiaomin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   - 构造代理律师 xiaomin.getClass().getInterfaces() 同 new\n   - Class[]{ILaysuit.class}\n   */")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),s._v(" lawyer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILaysuit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Proxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProxyInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xiaomin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("xiaomin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInterfaces")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" proxy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  lawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"老板拖欠工资"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  lawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("burden")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是合同书和去年的银行流水号"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  lawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"证据确凿, 无可厚非"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  lawyer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finish")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"诉讼成功, 老板结算拖欠工资"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DynamicProxy")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InvocationHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//被代理对象的引用")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DynamicProxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n  - proxy: 被代理对象\n  */")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" proxy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" method"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   - 通过 invoke 方法调用具体的被代理方法, 也就是真实方法\n   */")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" method"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("h2",{attrs:{id:"创建型设计模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建型设计模式"}},[s._v("#")]),s._v(" 创建型设计模式")]),s._v(" "),t("h3",{attrs:{id:"单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[s._v("#")]),s._v(" 单例模式")]),s._v(" "),t("p",[s._v("一、DCL(double check lock)")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 双重检查锁模式: 对线程安全的懒惰模式的改进: 方法上的synchronized在每次调用时都要加锁, 性能太低.\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 实例对象, 这里还没有添加volatile关键字 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 禁用构造方法 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 获取对象: 将方法上的synchronized移至内部\n     * @return instance 本类的实例\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先判断实例是否存在")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加锁创建实例")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      1.创建内存空间。")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      2.在内存空间中初始化对象 Singleton。")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      3.将内存地址赋值给 INSTANCE 对象(执行了此步骤, INSTANCE 就不等于 null 了)。")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoubleCheckedLockingSingleton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("说明:")]),s._v(" "),t("p",[t("strong",[s._v("volatile 作用")])]),s._v(" "),t("ol",[t("li",[s._v("解决内存可见性问题")]),s._v(" "),t("li",[s._v("防止指令重排序。")])]),s._v(" "),t("p",[s._v('试想一下, 如果不加 volatile, 那么线程 1 在执行到上述代码的第 ② 处时就可能会执行指令重排序, 将原本是 1、2、3 的执行顺序, 重排为 1、3、2。但是特殊情况下, 线程 1 在执行完第 3 步之后, 如果来了线程 2 执行到上述代码的第 ① 处, 判断 instance 对象已经不为 null, 但此时线程 1 还未将对象实例化完, 那么线程 2 将会得到一个被实例化"一半"的对象, 从而导致程序执行出错, 这就是为什么要给私有变量添加 volatile 的原因了。')]),s._v(" "),t("p",[s._v("二、内部类")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 静态内部类模式, 也称作Singleton Holder(单持有者)模式: 线程安全, 懒惰模式的一种, 用到时再加载\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticInnerSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 禁用构造方法 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticInnerSingleton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 通过静态内部类获取单例对象, 没有加锁, 线程安全, 并发性能高\n     * @return SingletonHolder.instance 内部类的实例\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticInnerSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingletonHolder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 静态内部类创建单例对象 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingletonHolder")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticInnerSingleton")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("INSTANCE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticInnerSingleton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("比较推荐这种方式, 没有加锁, 线程安全, 用到时再加载, 并发行能高")]),s._v(" "),t("h3",{attrs:{id:"建造者模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建造者模式"}},[s._v("#")]),s._v(" 建造者模式")]),s._v(" "),t("h3",{attrs:{id:"工厂方法模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法模式"}},[s._v("#")]),s._v(" 工厂方法模式")]),s._v(" "),t("p",[s._v("工厂方法模式包含如下角色:")]),s._v(" "),t("ul",[t("li",[s._v("Product: 抽象产品")]),s._v(" "),t("li",[s._v("ConcreteProduct: 具体产品")]),s._v(" "),t("li",[s._v("Factory: 抽象工厂")]),s._v(" "),t("li",[s._v("ConcreteFactory: 具体工厂")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/FactoryMethod.jpg",alt:"FactoryMethod"}})]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FactoryImpl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createCar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" clz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   car = (Car) Class.forName(clz.getName()).newInstance();")]),s._v("\n   car "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" clz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h2",{attrs:{id:"行为设计模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行为设计模式"}},[s._v("#")]),s._v(" 行为设计模式")]),s._v(" "),t("h3",{attrs:{id:"观察者模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式"}},[s._v("#")]),s._v(" 观察者模式")]),s._v(" "),t("p",[s._v("观察者模式包含如下角色:")]),s._v(" "),t("ul",[t("li",[s._v("Subject: 目标")]),s._v(" "),t("li",[s._v("ConcreteSubject: 具体目标")]),s._v(" "),t("li",[s._v("Observer: 观察者")]),s._v(" "),t("li",[s._v("ConcreteObserver: 具体观察者")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://design-patterns.readthedocs.io/zh_CN/latest/_images/Obeserver.jpg",alt:"Obeserver"}})]),s._v(" "),t("h3",{attrs:{id:"迭代器模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器模式"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"http://blog.csdn.net/zhengzhb/article/details/7610745",target:"_blank",rel:"noopener noreferrer"}},[s._v("迭代器模式"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"备忘录模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#备忘录模式"}},[s._v("#")]),s._v(" 备忘录模式")]),s._v(" "),t("p",[s._v("备忘录模式又叫做快照模式(Snapshot Pattern)或 Token 模式, 是对象的行为模式。")]),s._v(" "),t("p",[s._v("备忘录对象是一个用来存储另外一个对象内部状态的快照的对象。备忘录模式的用意是在不破坏封装的条件下, 将一个对象的状态捕捉(Capture)住, 并外部化, 存储起来, 从而可以在将来合适的时候把这个对象还原到存储起来的状态。备忘录模式常常与命令模式和迭代子模式一同使用。")]),s._v(" "),t("h2",{attrs:{id:"模式对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模式对比"}},[s._v("#")]),s._v(" 模式对比")]),s._v(" "),t("h3",{attrs:{id:"代理模式和装饰模式区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理模式和装饰模式区别"}},[s._v("#")]),s._v(" 代理模式和装饰模式区别")]),s._v(" "),t("ul",[t("li",[s._v("从语意上讲, 代理模式是为控制对被代理对象的访问, 而装饰模式是为了增加被装饰对象的功能")]),s._v(" "),t("li",[s._v("代理类所能代理的类完全由代理类确定, 装饰类装饰的对象需要根据实际使用时客户端的组合来确定")]),s._v(" "),t("li",[s._v("被代理对象由代理对象创建, 客户端甚至不需要知道被代理类的存在；被装饰对象由客户端创建并传给装饰对象。")]),s._v(" "),t("li",[s._v("装饰模式, 是面向对象编程领域中, 一种动态地往一个类中添加新的行为的设计模式。就功能而言, **装饰模式相比生成子类更为灵活, 这样可以给某个对象而不是整个类添加一些功能。")])]),s._v(" "),t("h2",{attrs:{id:"link"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[s._v("#")]),s._v(" link")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://design-patterns.readthedocs.io/zh_CN/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Graphic Design Patterns"),t("OutboundLink")],1),s._v(" 图说设计模式")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.kancloud.cn/digest/xing-designpattern/143717",target:"_blank",rel:"noopener noreferrer"}},[s._v("写最好的设计模式专栏"),t("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=e.exports}}]);