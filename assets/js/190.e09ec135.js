(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{506:function(_,v,t){"use strict";t.r(v);var e=t(4),l=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("blockquote",[v("p",[_._v("本方法使用灰度值来辨别白屏")])]),_._v(" "),v("p",[_._v("白色的RGB值为(255, 255, 255), 在灰度转换的情况下, 根据给定的转换公式 "),v("code",[_._v("Gray = (Rx4 + Gx10 + Bx2) >> 8")]),_._v(", 计算得到的灰度值为: "),v("code",[_._v("Gray=(255x4+255x10+255x2)>>8=(1020+2550+510)>>8=4080>>8=15")])]),_._v(" "),v("h2",{attrs:{id:"方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方案"}},[_._v("#")]),_._v(" 方案")]),_._v(" "),v("ul",[v("li",[_._v("根据(x,y,w,h)取出指定区域的图像")]),_._v(" "),v("li",[_._v("将图片每个像素点的(R,G,B)转换为灰度值(0-15), 转换公式如下:\n"),v("code",[_._v("Gray = (Rx4 + Gx10 + Bx2) >> 8")])]),_._v(" "),v("li",[_._v("统计Gray的分布情况, 把各个灰度值的情况上报")]),_._v(" "),v("li",[_._v("为了避免过多上报, 我们会先计算一下白色的占比, 计算公式如下:\n"),v("code",[_._v("whiteRate = GrayArr[15] / TotalPixels")])]),_._v(" "),v("li",[_._v("当whiteRate大于0.9 (配置中心可配web.white_rate_threshold)我们才会上报")]),_._v(" "),v("li",[_._v("我们只能截屏幕可见区域的指定部分, 如果用户有滚动, 那么截取的可能就不是首屏的内容了")])]),_._v(" "),v("h2",{attrs:{id:"检测原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#检测原理"}},[_._v("#")]),_._v(" 检测原理")]),_._v(" "),v("p",[_._v("这个白屏检测的原理基于对截取图像的灰度分布进行分析。具体步骤如下:")]),_._v(" "),v("ul",[v("li",[_._v("截取指定区域的图像:  根据给定的区域参数(x,y,w,h), 从屏幕截取指定位置的图像。")]),_._v(" "),v("li",[_._v("将图片每个像素点的(R,G,B)转换为灰度值:  对截取的图像进行灰度转换。"),v("RText",{attrs:{text:"灰度值是图像亮度的表示, 用一个数值表示整个像素的明暗程度"}}),_._v("。根据给定的转换公式 "),v("code",[_._v("Gray = (Rx4 + Gx10 + Bx2) >> 8")]),_._v(", 计算每个像素点的灰度值, 范围为0到15。")],1),_._v(" "),v("li",[_._v("统计灰度值的分布情况:  统计转换后的灰度值的分布情况, 得到每个灰度值出现的次数或比例。")]),_._v(" "),v("li",[_._v("计算白色占比:  根据灰度值的分布情况, 计算白色(灰度值为15)的占比, 即白色像素点在总像素点中的比例。")]),_._v(" "),v("li",[_._v("白屏检测:  当白色占比大于设定的阈值(例如0.9), 即白色像素点占据了大部分图像区域, 认为截取到的内容可能是白屏。")])]),_._v(" "),v("p",[_._v("这种方法的原理是基于白屏通常是整个屏幕大部分区域都是白色的特点。通过分析截取图像的灰度分布情况, 尤其是白色(灰度值最高)的占比, 可以判断当前页面是否呈现出白屏状态。这种方法可以有效避免截取到无效的白屏内容, 并且节省了上报的资源开销。")]),_._v(" "),v("h3",{attrs:{id:"灰度图像公式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#灰度图像公式"}},[_._v("#")]),_._v(" 灰度图像公式")]),_._v(" "),v("p",[v("code",[_._v("Gray = (Rx4 + Gx10 + Bx2) >> 8")]),_._v(" 是一个用于将彩色图像转换为灰度图像的公式。这个公式通过计算 RGB 三个通道的加权和来得到灰度值，其中绿色通道的权重较大，表明绿色对灰度值的影响最大。")]),_._v(" "),v("p",[_._v("让我们详细分析一下：")]),_._v(" "),v("RText",{attrs:{text:"公式含义："}}),_._v(" "),v("ul",[v("li",[_._v("R：表示红色通道的值。")]),_._v(" "),v("li",[_._v("G：表示绿色通道的值。")]),_._v(" "),v("li",[_._v("B：表示蓝色通道的值。")]),_._v(" "),v("li",[_._v("Gray：表示最终的灰度值。")]),_._v(" "),v("li",[v("code",[_._v(">> 8")]),_._v("：表示右移 8 位，相当于除以 256。")])]),_._v(" "),v("RText",{attrs:{text:"加权平均："}}),_._v(" "),v("p",[_._v("这个公式将红色、绿色、蓝色三个通道的值按照不同的权重加在一起：")]),_._v(" "),v("ul",[v("li",[_._v("红色的权重是 4。")]),_._v(" "),v("li",[_._v("绿色的权重是 10，比其他两个通道更高，反映了人眼对绿色更为敏感。")]),_._v(" "),v("li",[_._v("蓝色的权重是 2，相对较低。")])]),_._v(" "),v("p",[_._v("将它们加权后除以 256 来得到一个 0 到 15 的灰度值。")]),_._v(" "),v("RText",{attrs:{text:"具体步骤："}}),_._v(" "),v("ul",[v("li",[_._v("计算加权值："),v("code",[_._v("Rx4 + Gx10 + Bx2")]),_._v("。")]),_._v(" "),v("li",[_._v("红色的贡献是 "),v("code",[_._v("Rx4")])]),_._v(" "),v("li",[_._v("绿色的贡献是 "),v("code",[_._v("Gx10")])]),_._v(" "),v("li",[_._v("蓝色的贡献是 "),v("code",[_._v("Bx2")])]),_._v(" "),v("li",[_._v("右移 8 位："),v("code",[_._v(">> 8")]),_._v("，即将计算结果除以 256。右移操作可以快速实现这种整数除法。")])]),_._v(" "),v("RText",{attrs:{text:"理由："}}),_._v(" "),v("p",[_._v("使用加权平均是因为人眼对不同颜色的敏感度不同，通常对绿色最敏感，对红色次之，对蓝色最不敏感。这个公式中赋予了绿色较大的权重(10)，而红色和蓝色的权重较小(4 和 2)。")]),_._v(" "),v("RText",{attrs:{text:"总结："}}),_._v(" "),v("ul",[v("li",[_._v("红色、绿色 和 蓝色通道按照不同的权重加在一起，计算得到灰度值。")]),_._v(" "),v("li",[_._v("绿色的权重较高，符合人眼的感知特性。")]),_._v(" "),v("li",[_._v("通过位移操作快速实现除法来缩放结果到 0-255 范围内。")])])],1)}),[],!1,null,null,null);v.default=l.exports}}]);