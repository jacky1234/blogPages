(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{507:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"getidentifier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getidentifier"}},[t._v("#")]),t._v(" getIdentifier")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("val layoutID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("resources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIdentifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"activity_main"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"layout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("packageName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("layoutID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activity_main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("这两种形式在功能上都是设置一个活动(Activity)的布局(layout)，但它们在实现和使用场景上有一些区别。")])]),t._v(" "),a("p",[t._v("A. "),a("code",[t._v("setContentView(R.layout.activity_main)")]),t._v(": 这是最常见和直接的方式来设置活动的布局。在编译时，Android 会根据 "),a("code",[t._v("res/layout/activity_main.xml")]),t._v(" 文件生成一个对应的 "),a("code",[t._v("R.layout.activity_main")]),t._v(" 常量。这个常量是一个静态整数 ID，指向布局资源。使用这种方式，代码简洁明了，容易理解和维护。")]),t._v(" "),a("p",[t._v("B. "),a("code",[t._v("setContentView(layoutID)")]),t._v(": 这种方式首先通过 resources.getIdentifier 方法在运行时动态获取资源 ID，然后再将其设置为内容视图。具体实现如下:")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("val layoutID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIdentifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"activity_main"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"layout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" packageName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("layoutID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("RText",{attrs:{text:"使用场景"}}),t._v(" "),a("ol",[a("li",[t._v("动态资源加载:")])]),t._v(" "),a("ul",[a("li",[t._v("多布局支持: 如果你的应用需要在运行时根据某些条件(例如设备类型、用户设置、语言环境等)动态选择布局文件，可以使用这种方法。例如，可以根据屏幕尺寸加载不同的布局文件。")]),t._v(" "),a("li",[t._v("模块化资源: 在一些复杂项目中，布局文件可能会被动态地添加或移除。在这种情况下，使用字符串资源名称可以提供更灵活的资源管理方式。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("国际化和本地化:")])]),t._v(" "),a("ul",[a("li",[t._v("多语言支持: 通过 getIdentifier，可以更方便地在代码中处理不同语言环境下的资源。例如，不同语言环境可能有不同的布局文件命名。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("插件化和动态更新:")])]),t._v(" "),a("ul",[a("li",[t._v("插件系统: 如果你的应用有插件系统，并且插件的布局文件是动态加载的，那么可以使用这种方法来动态解析和加载插件资源。")]),t._v(" "),a("li",[t._v("热更新: 对于需要从服务器动态获取并加载布局文件的应用，可以在下载新的布局文件后，通过资源名称动态获取其 ID 并设置内容视图。")])]),t._v(" "),a("RText",{attrs:{text:"注意事项:"}}),t._v(" "),a("ul",[a("li",[t._v("性能:resources.getIdentifier 是一个相对耗时的操作，因为它是在运行时解析资源 ID。对于频繁调用的场景，要注意性能开销。")]),t._v(" "),a("li",[t._v("安全性: 动态获取资源 ID 的方式可能会因为资源名称拼写错误或者资源不存在而导致 layoutID 返回 0，从而引发 NullPointerException 或其他错误。因此，需要添加适当的错误处理。")]),t._v(" "),a("li",[t._v("代码可读性: 这种方式的代码可读性较低，维护起来可能不如直接使用 R.layout.activity_main 方便。")])])],1)}),[],!1,null,null,null);a.default=e.exports}}]);