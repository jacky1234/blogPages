(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{511:function(t,a,e){"use strict";e.r(a);var n=e(4),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("h2",{attrs:{id:"asynclayoutinflater"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynclayoutinflater"}},[t._v("#")]),t._v(" AsyncLayoutInflater")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:asynclayoutinflater/asynclayoutinflater/src/main/java/androidx/asynclayoutinflater/view/AsyncLayoutInflater.java;l=68?q=asyncLayoutInfla&sq=",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("AsyncLayoutInflater 代码不多, 原理也很简单:")]),t._v(" "),a("ul",[a("li",[t._v("创建 AsyncLayoutInflater 时异步线程启动, 然后被阻塞队列 take 方法阻塞。")]),t._v(" "),a("li",[t._v("通过 inflate 方法传入构造 View 的信息与回调对象, 然后从对象池中取出 InflateRequest 对象进行信息更新, 然后放入阻塞队列中。")]),t._v(" "),a("li",[t._v("阻塞队列 take 获取到元素, 异步线程开始执行 View 的创建, 并在执行完成后发送消息给 Handler。")]),t._v(" "),a("li",[t._v("Handler 回调主线程, 执行 OnInflateFinishedListener 回调对象, 然后回收 InflateRequest 对象。")])]),t._v(" "),a("p",[t._v("注意事项")]),t._v(" "),a("h2",{attrs:{id:"链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1190964",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android AsyncLayoutInflater 限制及改进"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);