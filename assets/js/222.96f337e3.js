(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{538:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[s("a",{attrs:{href:"https://www.w3.org/TR/xpath/all/",target:"_blank",rel:"noopener noreferrer"}},[t._v("XPath"),s("OutboundLink")],1),t._v(" is a language for selecting nodes in XML documents, which can also be used with HTML. CSS is a language for applying styles to HTML documents. It defines selectors to associate those styles with specific HTML elements.")])]),t._v(" "),s("p",[t._v("XPath 在 Web 抓取和数据提取中非常有用, 特别是在使用工具如 Scrapy 或 Beautiful Soup 进行网页解析时。你可以结合实际情况来编写 XPath 表达式, 以定位和提取所需的数据。要深入学习 XPath, 你可以查看 XPath 的规范文档以及相关教程和示例")]),t._v(" "),s("h2",{attrs:{id:"selector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#selector"}},[t._v("#")]),t._v(" selector")]),t._v(" "),s("p",[t._v("以下是 XPath 的一些基本概念和表达式入门:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("节点(Nodes):")]),t._v(" "),s("ul",[s("li",[t._v("元素节点(Element Nodes): XML 或 HTML 文档中的标签被称为元素节点, 如"),s("code",[t._v("<div>")]),t._v("、"),s("code",[t._v("<p>")]),t._v("。")]),t._v(" "),s("li",[t._v("属性节点(Attribute Nodes): 元素节点中的属性, 如"),s("code",[t._v('<a href="example.com">')]),t._v("中的 href 属性。")]),t._v(" "),s("li",[t._v("文本节点(Text Nodes): 元素节点内的文本内容, 如"),s("code",[t._v("<p>Hello World</p>")]),t._v('中的"Hello World"。')])])]),t._v(" "),s("li",[s("p",[t._v("路径表达式(Path Expressions):")]),t._v(" "),s("ul",[s("li",[t._v("使用斜杠"),s("code",[t._v("/")]),t._v("表示从根节点开始的绝对路径, 如"),s("code",[t._v("/html/body/div")]),t._v(".")]),t._v(" "),s("li",[t._v("使用双斜杠"),s("code",[t._v("//")]),t._v("表示从任何位置开始的相对路径, 如"),s("code",[t._v("//div")]),t._v(".")])])]),t._v(" "),s("li",[s("p",[t._v("元素选择:")]),t._v(" "),s("ul",[s("li",[t._v("选择所有的元素节点: "),s("code",[t._v("//element_name")]),t._v(", 例如"),s("code",[t._v("//div")]),t._v("选择文档中所有的"),s("code",[t._v("<div>")]),t._v("元素。")]),t._v(" "),s("li",[t._v("选择特定元素节点: "),s("code",[t._v("/path/to/element")]),t._v(", 例如"),s("code",[t._v("/html/body/div")]),t._v("选择特定路径下的"),s("code",[t._v("<div>")]),t._v("元素。")])])]),t._v(" "),s("li",[s("p",[t._v("属性选择:")]),t._v(" "),s("ul",[s("li",[t._v("选择元素节点的属性: "),s("code",[t._v("//element/@attribute")]),t._v(", 例如"),s("code",[t._v("//a/@href")]),t._v("选择所有"),s("code",[t._v("<a>")]),t._v("元素的"),s("code",[t._v("href")]),t._v("属性。")])])]),t._v(" "),s("li",[s("p",[t._v("文本选择:")]),t._v(" "),s("ul",[s("li",[t._v("选择元素节点的文本内容: "),s("code",[t._v("//element/text()")]),t._v(", 例如"),s("code",[t._v("//p/text()")]),t._v("选择所有"),s("code",[t._v("<p>")]),t._v("元素的文本内容。")])])]),t._v(" "),s("li",[s("p",[t._v("条件(Predicates):")]),t._v(" "),s("ul",[s("li",[t._v("使用方括号"),s("code",[t._v("[]")]),t._v("来添加条件, 如"),s("code",[t._v('//div[@class="example"]')]),t._v('选择 class 属性值为"example"的'),s("code",[t._v("<div>")]),t._v("元素。")])])]),t._v(" "),s("li",[s("p",[t._v("通配符:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("*")]),t._v(" 通配符可以匹配任何元素, 如"),s("code",[t._v("//div/*")]),t._v("选择 "),s("code",[t._v("<div>")]),t._v("元素内的所有子元素。")])])])]),t._v(" "),s("h2",{attrs:{id:"case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[t._v("#")]),t._v(" case")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从a的class为指定内容的元素中获取href列表")]),t._v("\nresponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"//a[@class='btn btn-min btn-warm']\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@href'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从class以btn btn-min开头的元素中提取href列表")]),t._v("\nresponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"//a[starts-with(@class,'btn btn-min')]\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@href'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 得到所有 iframe 的父节点元素列表")]),t._v("\nresponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//iframe/..'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"模糊查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模糊查询"}},[t._v("#")]),t._v(" 模糊查询")]),t._v(" "),s("blockquote",[s("p",[t._v("调研是否有正则查询？")])]),t._v(" "),s("p",[t._v("XPath 本身并不支持像正则表达式那样的模式匹配功能。")]),t._v(" "),s("p",[t._v("如果您需要在 XML 中执行类似于正则表达式的文本匹配操作, 可以考虑使用 XPath 的一些其他功能和组合方法来达到目的:")]),t._v(" "),s("ul",[s("li",[t._v("基本选择器: XPath 支持选择特定类型的节点、特定名称的节点以及节点属性等。您可以使用这些基本选择器来定位目标节点。")]),t._v(" "),s("li",[t._v("逻辑运算符: XPath 支持逻辑运算符, 如 and、or 和 not。您可以使用这些运算符来组合多个选择器, 并满足更复杂的选择条件。")]),t._v(" "),s("li",[t._v("函数: XPath 提供了一些内置函数, 如 "),s("code",[t._v("contains()")]),t._v("、"),s("code",[t._v("starts-with()")]),t._v(" 和 "),s("code",[t._v("substring()")]),t._v(" 等, 这些函数可以用于执行某些文本模式匹配操作。")]),t._v(" "),s("li",[t._v("自定义扩展: 某些 XML 解析器或 XPath 库可能支持自定义函数或扩展, 您可以编写自定义函数来实现特定的文本匹配逻辑。")])]),t._v(" "),s("p",[t._v("虽然 XPath 本身并不支持正则表达式的功能, 但以上方法通常可以满足大多数 XML 解析和数据提取的需求。如果您需要更复杂的模式匹配操作, 可能需要将 XPath 结合其他语言或工具来实现, 比如结合 Python 的正则表达式库和 XPath 解析库来完成任务。")]),t._v(" "),s("h3",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" example")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("//book[contains(title, 'XML')]")]),t._v(": 选择所有 "),s("code",[t._v("<book>")]),t._v(" 元素, 其中 "),s("code",[t._v("<title>")]),t._v(' 子元素的文本内容包含 "XML"')]),t._v(" "),s("li",[s("code",[t._v("//book[starts-with(author, 'John')]")]),t._v(": 选择所有 "),s("code",[t._v("<book>")]),t._v(" 元素, 其中 "),s("code",[t._v("<author>")]),t._v(' 子元素的文本内容以 "John" 开头')]),t._v(" "),s("li",[s("code",[t._v("//book[starts-with(@class, 'comment')]")]),t._v(": 选择所有"),s("code",[t._v("<book>")]),t._v(' 元素, 其 class 属性以 "comment" 开头的元素')]),t._v(" "),s("li",[s("code",[t._v("//*[starts-with(@class, 'comment')]")]),t._v(': 选择所有元素, 其 class 属性以 "comment" 开头的元素')]),t._v(" "),s("li",[s("code",[t._v("substring('Hello World', 7)")]),t._v(': 上述 XPath 表达式将返回 "World", 因为它提取了从第 7 个字符开始的子字符串')]),t._v(" "),s("li",[s("code",[t._v("//@*[contains(., 'http://') or contains(., 'https://')]")]),t._v(': 这个表达式会选择所有属性值中包含 "http://" 或 "https://" 的元素\n'),s("ul",[s("li",[s("code",[t._v("@*")]),t._v(": 表示选择当前节点的所有属性。例如, "),s("code",[t._v("@href")]),t._v(" 表示选择当前节点的 href 属性。")]),t._v(" "),s("li",[s("code",[t._v(".")]),t._v(": 表示当前节点。在这种情况下, contains(., 'http://') 表达式将检查当前节点的文本内容是否包含 \"http://\" 字符串")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);