(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{344:function(s,a,t){"use strict";t.r(a);var e=t(4),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[s._v("#")]),s._v(" install")]),s._v(" "),a("ul",[a("li",[s._v("brew: "),a("RouterLink",{attrs:{to:"/pages/f3e095/"}},[s._v("link")])],1)]),s._v(" "),a("h3",{attrs:{id:"apt-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apt-get"}},[s._v("#")]),s._v(" apt-get")]),s._v(" "),a("blockquote",[a("p",[s._v("要在 Ubuntu 上安装软件, 可以使用 shell 命令 "),a("code",[s._v("apt-get")]),s._v(" 或 "),a("code",[s._v("apt")]),s._v("。以下是一些常用的安装软件的示例命令:")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("sudo apt-get install <package-name>")]),s._v(" 安装单个软件包")]),s._v(" "),a("li",[a("code",[s._v("sudo apt-get install <package1> <package2> <package3>")]),s._v(" 安装多个软件包")]),s._v(" "),a("li",[a("code",[s._v("sudo apt-get update")]),s._v(" 更新软件包")]),s._v(" "),a("li",[a("code",[s._v("sudo apt-get upgrade")]),s._v(" 升级已安装的软件包")]),s._v(" "),a("li",[a("code",[s._v("apt list --installed")]),s._v(" 显示已在系统上安装的软件包列表 "),a("code",[s._v("dpkg --list")])])]),s._v(" "),a("h2",{attrs:{id:"file-文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-文本"}},[s._v("#")]),s._v(" file/文本")]),s._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[s._v("#")]),s._v(" file")]),s._v(" "),a("blockquote",[a("p",[s._v("显示文件的类型, 如文本、图像、二进制等, 以及一些其他信息。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" 文件名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stat"}},[s._v("#")]),s._v(" stat")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("stat")]),s._v(" 命令将提供有关文件的详细信息, 包括文件大小、访问时间、修改时间等")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" 文件名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"exiftool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exiftool"}},[s._v("#")]),s._v(" exiftool")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("exiftool")]),s._v(" 命令可以提供图像、音频和视频文件的元数据信息, 如拍摄日期、分辨率、音频编解码等。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("exiftool 文件名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"lsof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lsof"}},[s._v("#")]),s._v(" lsof")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v('lsof("list open files")')]),s._v("是一个用于显示系统中打开文件的命令行工具。它在 Unix、Linux 和类 Unix 系统上可用, 并提供了有关正在使用哪些文件和文件描述符的信息。lsof 可以显示当前打开的文件、网络连接、进程和其他资源的详细信息。")])]),s._v(" "),a("p",[s._v("lsof 的基本语法如下:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("以下是一些常用的 lsof 选项和用法示例:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("lsof")]),s._v(" 显示所有打开的文件")]),s._v(" "),a("li",[a("code",[s._v("lsof -p <PID>")]),s._v(" 显示特定进程打开的文件")]),s._v(" "),a("li",[a("code",[s._v("lsof -u <username>")]),s._v(" 显示特定用户打开的文件")]),s._v(" "),a("li",[a("code",[s._v("lsof <filename>")]),s._v(" 显示特定文件的打开者")]),s._v(" "),a("li",[a("code",[s._v("lsof -i :<port>")]),s._v(" 显示特定端口号相关的网络连接")]),s._v(" "),a("li",[a("code",[s._v("lsof +L1")]),s._v(" 显示已删除但仍在使用的文件")]),s._v(" "),a("li",[a("code",[s._v("lsof -F [format]")]),s._v(" 以用户友好的格式显示输出结果")])]),s._v(" "),a("p",[s._v("这只是一些 lsof 命令的示例, lsof 支持许多其他选项和过滤器, 可以根据具体需求进行定制。你可以通过查阅 "),a("code",[s._v("lsof")]),s._v(" 的手册页(man 页)来获取更详细的信息, 使用命令 "),a("code",[s._v("man lsof")]),s._v(" 即可查看。")]),s._v(" "),a("RText",{attrs:{text:"查看mysql的端口等信息"}}),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" % "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" mysql\nmysqld     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3442")]),s._v(" jacky   28u  IPv4 0x267a954ec6d2a887      0t0  TCP localhost:33060 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LISTEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmysqld     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3442")]),s._v(" jacky   44u  IPv4 0x267a954ec7bf3f97      0t0  TCP localhost:mysql "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LISTEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmysqld     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3442")]),s._v(" jacky   47u  IPv4 0x267a954ec70a1bd7      0t0  TCP localhost:mysql-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("localhost:59265 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ESTABLISHED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTablePlus "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87112")]),s._v(" jacky   15u  IPv4 0x267a954eca60fbd7      0t0  TCP localhost:59265-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("localhost:mysql "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ESTABLISHED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解释:")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysqld 进程使用了以下几种网络连接:")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP localhost:33060 (LISTEN): MySQL 正在监听 localhost 的 33060 端口。")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP localhost:mysql (LISTEN): MySQL 正在监听 localhost 的 mysql 端口(通常是 3306 端口)。")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP localhost:mysql->localhost:59265 (ESTABLISHED): 有一个来自 localhost 59265 端口的连接到 mysql 3306 端口的连接已建立。")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TablePlus 应用程序也在使用 localhost 的 59265 端口连接到 MySQL 3306 端口。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[s._v("#")]),s._v(" ls")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("ls")]),s._v(" 是一个常用的命令行工具, 用于列出当前目录中的文件和子目录。它的功能包括显示文件属性、权限、时间戳等信息, 以及对文件和目录进行排序和筛选。")])]),s._v(" "),a("RText",{attrs:{text:"options:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-l")]),s._v(": 以长格式(long format)显示文件和目录的详细信息, 包括权限、所有者、大小、时间戳等")]),s._v(" "),a("li",[a("code",[s._v("-a")]),s._v(": 显示所有文件和目录, 包括隐藏文件(以点开头的文件名)")]),s._v(" "),a("li",[a("code",[s._v("-h")]),s._v(": 以人类可读的格式显示文件大小(例如, 使用 KB、MB、GB 等单位)")]),s._v(" "),a("li",[a("code",[s._v("-r")]),s._v(": 以逆序(逆向)排序显示结果")]),s._v(" "),a("li",[a("code",[s._v("-t")]),s._v(": 按修改时间排序, 最新的在前")]),s._v(" "),a("li",[a("code",[s._v("-R")]),s._v(": 递归地显示子目录中的文件和目录")]),s._v(" "),a("li",[a("code",[s._v("-d")]),s._v(": 仅显示目录本身, 而不是其内容")]),s._v(" "),a("li",[a("code",[s._v("-i")]),s._v(": 显示文件和目录的索引号(inode)")]),s._v(" "),a("li",[a("code",[s._v("-s")]),s._v(": 显示文件和目录的大小(以块为单位)")]),s._v(" "),a("li",[a("code",[s._v("-f")]),s._v(": Output is not sorted. (文件异常多使用, 避免 shell 卡住)")])]),s._v(" "),a("RText",{attrs:{text:"case:"}}),s._v(" "),a("ul",[a("li",[s._v("列出当前目录中的文件和目录: "),a("code",[s._v("ls")])]),s._v(" "),a("li",[s._v("列出当前目录中的所有文件和目录, 包括隐藏文件: "),a("code",[s._v("ls -a")])]),s._v(" "),a("li",[s._v("以长格式显示当前目录中的文件和目录: "),a("code",[s._v("ls -l")])]),s._v(" "),a("li",[s._v("按修改时间排序, 最新的在前: "),a("code",[s._v("ls -lt")])]),s._v(" "),a("li",[s._v("列出指定目录的内容: "),a("code",[s._v("ls /path/to/directory")])]),s._v(" "),a("li",[s._v("递归地列出指定目录及其子目录中的所有文件和目录: "),a("code",[s._v("ls -R /path/to/directory")])])]),s._v(" "),a("h3",{attrs:{id:"find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[s._v("#")]),s._v(" find")]),s._v(" "),a("RText",{attrs:{text:"option"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-type")]),s._v(":\n"),a("ul",[a("li",[a("code",[s._v("-f")]),s._v("文件")])])]),s._v(" "),a("li",[a("code",[s._v("-print0")]),s._v(": followed by an ASCII NUL characte")]),s._v(" "),a("li",[a("code",[s._v("-szie")]),s._v(":\n"),a("ul",[a("li",[a("code",[s._v("+10M")]),s._v(": 大于 10M")]),s._v(" "),a("li",[a("code",[s._v("-20M")]),s._v(": 小于 20M")])])])]),s._v(" "),a("RText",{attrs:{text:"case"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("find ./ -size +10M -type f -print0")]),s._v(": 查找大于 10M 的文件")]),s._v(" "),a("li",[a("code",[s._v("find ./ -size +10M -size -20M -type f -print0")]),s._v(": 查找大于 10M,小于 20M 的文件")])]),s._v(" "),a("h3",{attrs:{id:"fd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fd"}},[s._v("#")]),s._v(" fd")]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/pages/388ca5/"}},[s._v("link")])],1)]),s._v(" "),a("h2",{attrs:{id:"text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text"}},[s._v("#")]),s._v(" text")]),s._v(" "),a("h3",{attrs:{id:"sed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" sed")]),s._v(" "),a("blockquote",[a("p",[s._v("sed(stream editor)是一种流编辑器, 用于对文本进行流式替换和转换。它通常在命令行中使用, 可以用来执行各种文本处理任务, 如替换、删除、插入和打印。")])]),s._v(" "),a("p",[a("code",[s._v("sed")]),s._v(" 命令的一般语法是: "),a("code",[s._v("sed OPTIONS... [SCRIPT] [INPUTFILE...]")]),s._v(". 其中 OPTIONS 是命令行选项, SCRIPT 是 sed 的编辑脚本, 可以是一个或多个命令, INPUTFILE 是要处理的输入文件。")]),s._v(" "),a("RText",{attrs:{text:"OPTIONS:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-i")]),s._v(": This tells sed to edit files in place, rather than outputting the modified text to the console.\n"),a("ul",[a("li",[s._v("在 macOS 上使用 "),a("code",[s._v("-i ''")]),s._v(" 表示不创建备份文件；在 Linux 上可以直接使用 -i")])])])]),s._v(" "),a("RText",{attrs:{text:"MODE"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("s")]),s._v(": 替换, 规则 "),a("code",[s._v("s/PATTERN/REPLACEMENT/FLAGS")]),s._v(". FLAGS 是可选的标志, 例如 "),a("code",[s._v("g")]),s._v(" 表示全局替换\n"),a("ul",[a("li",[a("code",[s._v("sed -E 's/\\[//g; s/\\]//g'")]),s._v(": 多规则替换。这里表示替换 "),a("code",[s._v("[")]),s._v(" 和 "),a("code",[s._v("]")]),s._v(" 为空字符串")])])]),s._v(" "),a("li",[a("code",[s._v("d")]),s._v(": 删除模式\n"),a("ul",[a("li",[a("code",[s._v("sed '/foo/d' text.txt")]),s._v(': 删除文本中所有包含 "foo" 的行')])])]),s._v(" "),a("li",[a("code",[s._v("i")]),s._v(": 在匹配模式前插入一行文本\n"),a("ul",[a("li",[a("code",[s._v("sed '/foo/i\\bar' text.txt")])])])]),s._v(" "),a("li",[a("code",[s._v("a")]),s._v(": 用于在匹配模式后追加一行文本\n"),a("ul",[a("li",[a("code",[s._v("sed '/foo/a\\bar' text.txt")])])])]),s._v(" "),a("li",[a("code",[s._v("p")]),s._v(": 用于打印匹配模式的行\n"),a("ul",[a("li",[a("code",[s._v("sed -n '/foo/p' text.txt")])])])])]),s._v(" "),a("RText",{attrs:{text:"case:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("fd -e md -0 | xargs -0 -I {} sed -i '' -E 's/(/\\(/g; s/)/\\)/g' {}")]),s._v(": 替换 md 文件中，中文括号为英文括号")])]),s._v(" "),a("h3",{attrs:{id:"cmp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmp"}},[s._v("#")]),s._v(" cmp")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("cmp")]),s._v(": compare two files")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比较替换前后的文件内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$tmp_file")]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果文件内容不同，则进行替换并打印文件路径")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$tmp_file")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v('"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"版本号已在文件中替换:'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v('"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果文件内容相同，则删除临时文件")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$tmp_file")]),s._v('"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" awk")]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/pages/ccc0f6/"}},[s._v("link")])],1)]),s._v(" "),a("h3",{attrs:{id:"tr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tr"}},[s._v("#")]),s._v(" tr")]),s._v(" "),a("h2",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[s._v("#")]),s._v(" network")]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/pages/3e8153/"}},[s._v("link")])],1)]),s._v(" "),a("h2",{attrs:{id:"compress-uncompress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compress-uncompress"}},[s._v("#")]),s._v(" compress/uncompress")]),s._v(" "),a("h3",{attrs:{id:"xz"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xz"}},[s._v("#")]),s._v(" xz")]),s._v(" "),a("p",[a("code",[s._v("xz")]),s._v(" 命令 XZ Utils 是为 POSIX 平台开发具有高压缩率的工具。它使用 "),a("code",[s._v("LZMA2")]),s._v(" 压缩算法, 生成的压缩文件比 POSIX 平台传统使用的 gzip、bzip2 生成的压缩文件更小, 而且解压缩速度也很快。最初 XZ Utils 的是基于 LZMA-SDK 开发, 但是 LZMA-SDK 包含了一些 WINDOWS 平台的特性, 所以 XZ Utils 为以适应 POSIX 平台作了大幅的修改。XZ Utils 的出现也是为了取代 POSIX 系统中旧的 LZMA Utils。")]),s._v(" "),a("RText",{attrs:{text:"options"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-k")]),s._v(": keep")]),s._v(" "),a("li",[a("code",[s._v("-d, --decompress")])])]),s._v(" "),a("RText",{attrs:{text:"常用命令"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("xz -h")])]),s._v(" "),a("li",[a("code",[s._v("xz test.txt")]),s._v(" 压缩一个文件 test.txt, 压缩成功后生成 test.txt.xz, 原文件会被删除")]),s._v(" "),a("li",[a("code",[s._v("xz -d -k test.txt.xz")]),s._v(" 解压 test.txt.xz 文件, 并使用参数 -k 保持原文件不被删除")])]),s._v(" "),a("h3",{attrs:{id:"tar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[s._v("#")]),s._v(" tar")]),s._v(" "),a("blockquote",[a("p",[s._v("tar: manipulate tape archives")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("SYNOPSIS\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("bundled-flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("-c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("-r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" archive-file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("-t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nDESCRIPTION\n   "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("      Create a new archive containing the specified items.  The long option form is --create.\n   "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("      Like -c, but new entries are appended to the archive.  Note that this only works on uncom-\n            pressed archives stored "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" regular files.  The "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" option is required.  The long option form is\n            --append.\n   "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("      List archive contents to stdout.  The long option form is --list.\n   "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v("      Like -r, but new entries are added only "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" they have a modification "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" newer than the corre-\n            sponding entry "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the archive.  Note that this only works on uncompressed archives stored "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n            regular files.  The "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" option is required.  The long form is --update.\n   "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-x")]),s._v("      Extract to disk from the archive.  If a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" with the same name appears "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" than once "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the\n            archive, each copy will be extracted, with later copies overwriting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("replacing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" earlier\n            copies.  The long option form is --extract.\n   -v, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v("\n            Produce verbose output.  In create and extract modes, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" will list each "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name as it is "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" from or written to the archive.  In list mode, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" will produce output similar to that of ls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".  An additional "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" option\n            will also provide ls-like details "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" create and extract mode.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("tar xvf <zip>")]),s._v(": 解压 zip")]),s._v(" "),a("li",[a("code",[s._v("tar -tvf <zip>")]),s._v(": 读取 zip 中的内容")]),s._v(" "),a("li",[a("code",[s._v("tar -czvf <xxx.tar.gz> <dir>")]),s._v(": 压缩, dir 可以缺省")])]),s._v(" "),a("h3",{attrs:{id:"p7zip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p7zip"}},[s._v("#")]),s._v(" p7zip")]),s._v(" "),a("blockquote",[a("p",[s._v("brew install p7zip")])]),s._v(" "),a("RText",{attrs:{text:"options:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("a")]),s._v(" 添加文件到压缩文件")]),s._v(" "),a("li",[a("code",[s._v("d")]),s._v(" 从压缩文件中删除文件")]),s._v(" "),a("li",[a("code",[s._v("e")]),s._v(" 从压缩文件中解压缩文件, 不包含目录结构")]),s._v(" "),a("li",[a("code",[s._v("l")]),s._v(" 列出压缩包中的内容")]),s._v(" "),a("li",[a("code",[s._v("t")]),s._v(" 测试压缩文件")]),s._v(" "),a("li",[a("code",[s._v("u")]),s._v(" 更新文件到压缩文件")]),s._v(" "),a("li",[a("code",[s._v("x")]),s._v(" 从压缩文件中解压缩, 包含目录结构")])]),s._v(" "),a("RText",{attrs:{text:"common"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("7z a compressed_file.7z file_to_compress.txt")]),s._v(" 压缩文件")]),s._v(" "),a("li",[a("code",[s._v("7z a compressed_folder.7z folder_to_compress/")]),s._v(" 压缩目录及其内容")]),s._v(" "),a("li",[a("code",[s._v("7z a -pYourPassword compressed_file_with_password.7z file_to_compress.txt")]),s._v(" 压缩文件并设置密码")]),s._v(" "),a("li",[a("code",[s._v("7z x <7z>")]),s._v(" 解压")])]),s._v(" "),a("h2",{attrs:{id:"other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other"}},[s._v("#")]),s._v(" other")]),s._v(" "),a("h3",{attrs:{id:"genrsa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genrsa"}},[s._v("#")]),s._v(" genrsa")]),s._v(" "),a("blockquote",[a("p",[s._v("rsa")])]),s._v(" "),a("h3",{attrs:{id:"shasum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shasum"}},[s._v("#")]),s._v(" shasum")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("Print or Check SHA Checksums")])])]),s._v(" "),a("RText",{attrs:{text:"SHA-256"}}),s._v(" "),a("p",[s._v("在 macOS 的 shell 中，可以使用 shasum 命令生成文件或字符串的 SHA-256 哈希值。以下是两种常见用法：")]),s._v(" "),a("ol",[a("li",[s._v("对文件生成 SHA-256 哈希值: "),a("code",[s._v("shasum -a 256 <file_name>")])]),s._v(" "),a("li",[s._v("对字符串生成 SHA-256 哈希值: "),a("code",[s._v('echo -n "your_string" | shasum -a 256')])])]),s._v(" "),a("h3",{attrs:{id:"md5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#md5"}},[s._v("#")]),s._v(" md5")]),s._v(" "),a("h3",{attrs:{id:"which"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#which"}},[s._v("#")]),s._v(" which")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("which curl")]),s._v(": 返回 curl 可执行文件的路径")])]),s._v(" "),a("h3",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[s._v("#")]),s._v(" command")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("command -v curl")]),s._v(": 返回 curl 可执行文件的路径")])]),s._v(" "),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[s._v("#")]),s._v(" type")]),s._v(" "),a("blockquote",[a("p",[s._v("type 命令在排查 shell 环境问题时非常有用，因为它能帮你区分命令是别名、函数还是系统的实际可执行文件。")])]),s._v(" "),a("h3",{attrs:{id:"uuidgen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uuidgen"}},[s._v("#")]),s._v(" uuidgen")]),s._v(" "),a("blockquote",[a("p",[s._v("uuid 生成")])]),s._v(" "),a("h3",{attrs:{id:"systemctl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[s._v("#")]),s._v(" systemctl")]),s._v(" "),a("blockquote",[a("p",[s._v("Control the systemd system and service manager")])]),s._v(" "),a("h3",{attrs:{id:"hostname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hostname"}},[s._v("#")]),s._v(" hostname")]),s._v(" "),a("blockquote",[a("p",[s._v("主机名")])]),s._v(" "),a("p",[s._v("在 linux 可以通过如下命令修改主机名")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" hostnamectl set-hostname 新的主机名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" env")]),s._v(" "),a("h3",{attrs:{id:"echo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#echo"}},[s._v("#")]),s._v(" echo")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-n")]),s._v(": Do not print the trailing newline character")])]),s._v(" "),a("h3",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" sort")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-r")]),s._v(": reverse order")])]),s._v(" "),a("h3",{attrs:{id:"uniq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[s._v("#")]),s._v(" uniq")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("uniq")]),s._v(": report or filter out repeated lines in a file")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-c")]),s._v(": 计算行个数，常用于统计")])]),s._v(" "),a("h3",{attrs:{id:"wc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wc"}},[s._v("#")]),s._v(" wc")]),s._v(" "),a("h3",{attrs:{id:"du"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#du"}},[s._v("#")]),s._v(" du")]),s._v(" "),a("blockquote",[a("p",[s._v('du: "disk usage", 它用于查看文件和文件夹的磁盘使用情况。')])]),s._v(" "),a("RText",{attrs:{text:"options:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-s")]),s._v(" 选项表示要显示文件夹的总大小而不是每个子目录的大小")]),s._v(" "),a("li",[a("code",[s._v("-h")]),s._v(" 选项表示以人类可读的格式显示文件夹大小, 例如以 KB、MB、GB 等单位")])]),s._v(" "),a("p",[s._v("请注意, "),a("code",[s._v("du")]),s._v(" 命令将递归地统计文件夹中的所有文件和子文件夹的大小, 因此它会显示整个文件夹的总大小。")]),s._v(" "),a("RText",{attrs:{text:"case"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("du -sh /path/to/directory")])]),s._v(" "),a("li",[a("code",[s._v("du -ah . | sort -rh | head -n 10")]),s._v(": top 10")])]),s._v(" "),a("h3",{attrs:{id:"whoami"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whoami"}},[s._v("#")]),s._v(" whoami")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 圆括号 () 可以用来创建一个子 Shell")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo `whoami`")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("用户名")]),s._v(" "),a("h3",{attrs:{id:"time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[s._v("#")]),s._v(" time")]),s._v(" "),a("blockquote",[a("p",[s._v("耗时")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("time ls -f &>/dev/null")])]),s._v(" "),a("li",[a("code",[s._v("time sleep 1")])])]),s._v(" "),a("h3",{attrs:{id:"hexdump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hexdump"}},[s._v("#")]),s._v(" hexdump")]),s._v(" "),a("blockquote",[a("p",[s._v("显示文件十六进制格式")])]),s._v(" "),a("RText",{attrs:{text:"大端序/小端序"}}),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("hexdump -C <path>")]),s._v(": 这种方式的输出结果跟 sublime hexerview 是一致的")])]),s._v(" "),a("p",[s._v("hexdump 命令的输出格式和端序(endianness)没有直接关系，因为它是以字节为单位显示文件内容的十六进制表示。然而，根据选项不同，hexdump 的输出可以有不同的格式。")]),s._v(" "),a("p",[s._v("在默认情况下，hexdump 命令以字节序列显示文件内容，而不管是大端序(big-endian)还是小端序(little-endian)。这意味着 hexdump 的输出是逐字节显示的，因此与文件中实际存储的字节顺序一致。")]),s._v(" "),a("p",[s._v("举个例子，如果文件内容是 "),a("code",[s._v("0x65 0x68 0x6c 0x6c 0x0a 0x6f")]),s._v("，hexdump 的输出将会如下:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ hexdump "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt\n0000000 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6568")]),s._v(" 6c6c 0a6f\n0000006\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这个输出表示的是文件内容按顺序读取并按十六进制表示。如果想详细一点，可以使用 od(octal dump)命令查看逐字节的内容:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ od "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" x1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt\n0000000 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),s._v(" 6c 6c 0a 6f\n0000006\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这里，每个字节都显示为两位十六进制数。")]),s._v(" "),a("hr"),s._v(" "),a("RText",{attrs:{text:"指定不同格式"}}),s._v(" "),a("p",[s._v("hexdump 提供了多种格式选项，可以用来以不同的端序显示数据。例如，-e 选项可以指定输出格式，结合 od 也可以查看不同的格式。")]),s._v(" "),a("p",[s._v("查看小端序和大端序")]),s._v(" "),a("p",[s._v("若需要查看小端序和大端序的数据表示，可以考虑如下例子:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\x01\\x02\\x03\\x04'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.bin\n$ hexdump "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4/1 \"%02X \"'")]),s._v(" test.bin\n01 02 03 04\n$ hexdump "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1/4 \"%08X \"'")]),s._v(" test.bin\n04030201\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[a("code",[s._v('4/1 "%02X "')]),s._v(" 表示逐字节显示内容，输出为 "),a("code",[s._v("01 02 03 04")])]),s._v(" "),a("li",[a("code",[s._v('1/4 "%08X "')]),s._v(" 表示按 4 字节一组显示内容(假设小端序)，输出为 "),a("code",[s._v("04030201")])])]),s._v(" "),a("p",[s._v("指定端序示例")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\x01\\x02\\x03\\x04'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.bin\n$ hexdump "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'4/1 "%02X " "\\n"\'')]),s._v(" test.bin   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每4字节换行一次")]),s._v("\n01 02 03 04\n$ hexdump "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'1/4 "%08X " "\\n"\'')]),s._v(" test.bin   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按4字节组显示小端序")]),s._v("\n04030201\n$ hexdump "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'1/4 "%08X " "\\n"\'')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" test.bin  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按4字节组显示大端序")]),s._v("\n01020304\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这里，"),a("code",[s._v("-n 4")]),s._v(" 表示读取前 4 个字节。根据格式化字符串可以看到不同端序的效果。")]),s._v(" "),a("p",[s._v("总结:")]),s._v(" "),a("ul",[a("li",[s._v("hexdump 默认输出逐字节显示，与端序无关")]),s._v(" "),a("li",[s._v("使用 -e 选项可以自定义输出格式，观察不同端序效果")]),s._v(" "),a("li",[s._v("结合 od 或其他工具可以更方便观察大端序和小端序")])]),s._v(" "),a("p",[s._v("这样就可以确认 hexdump 输出的大端序还是小端序视具体格式而定，默认情况下逐字节显示与文件内容一致。")]),s._v(" "),a("h3",{attrs:{id:"kill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kill"}},[s._v("#")]),s._v(" kill")]),s._v(" "),a("blockquote",[a("p",[s._v("kill: terminate or signal a process")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("kill <PID>")])]),s._v(" "),a("li",[a("code",[s._v("kill -9 <PID>")]),s._v(" 强制终止一个进程")])]),s._v(" "),a("h3",{attrs:{id:"tee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tee"}},[s._v("#")]),s._v(" tee")]),s._v(" "),a("blockquote",[a("p",[s._v("tee: "),a("code",[s._v("duplicate standard input")]),s._v(". 用于从标准输入中读取数据, 并将其写入一个或多个文件以及标准输出。")])]),s._v(" "),a("h3",{attrs:{id:"xargs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xargs"}},[s._v("#")]),s._v(" xargs")]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/pages/ae37cb/"}},[s._v("link")])],1)]),s._v(" "),a("h3",{attrs:{id:"uname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uname"}},[s._v("#")]),s._v(" uname")]),s._v(" "),a("blockquote",[a("p",[s._v("display information about the system")])]),s._v(" "),a("RText",{attrs:{text:"options:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("-s")]),s._v(" 或 --kernel-name: 显示操作系统的名称")]),s._v(" "),a("li",[a("code",[s._v("-n")]),s._v(" 或 --nodename: 显示网络节点的主机名")]),s._v(" "),a("li",[a("code",[s._v("-r")]),s._v(" 或 --kernel-release: 显示操作系统的发布编号")]),s._v(" "),a("li",[a("code",[s._v("-v")]),s._v(" 或 --kernel-version: 显示操作系统的版本")]),s._v(" "),a("li",[a("code",[s._v("-m")]),s._v(" 或 --machine: 显示机器的硬件名称")]),s._v(" "),a("li",[a("code",[s._v("-p")]),s._v(' 或 --processor: 显示处理器的类型或 "unknown"')]),s._v(" "),a("li",[a("code",[s._v("-i")]),s._v(" 或 --hardware-platform: 显示硬件平台")]),s._v(" "),a("li",[a("code",[s._v("-o")]),s._v(" 或 --operating-system: 显示操作系统名称")]),s._v(" "),a("li",[a("code",[s._v("-a")]),s._v(" 或 --all: 显示所有信息(等同于 -snrvmio 选项的组合)")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" % "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v("\nx86_64\n\n-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" % "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\nDarwin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".local "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23.6")]),s._v(".0 Darwin Kernel Version "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23.6")]),s._v(".0: Mon Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":13:00 PDT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" root:xnu-10063.141.2~1/RELEASE_X86_64 x86_64\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"clipboard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clipboard"}},[s._v("#")]),s._v(" clipboard")]),s._v(" "),a("ol",[a("li",[s._v("复制文件内容到剪切板: "),a("code",[s._v("pbcopy")])])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/source_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pbcopy"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# macOS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/source_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" xclip "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-selection")]),s._v(" clipboard"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Linux with X11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/source_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" xsel "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--clipboard")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Alternative for Linux with X11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" /path/to/source_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" clip"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#windows")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("从剪贴板粘贴数据: "),a("code",[s._v("pbpaste")])])]),s._v(" "),a("h3",{attrs:{id:"hostname-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hostname-2"}},[s._v("#")]),s._v(" hostname")]),s._v(" "),a("h3",{attrs:{id:"tail-head"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tail-head"}},[s._v("#")]),s._v(" tail/head")]),s._v(" "),a("blockquote",[a("p",[s._v("主机")])]),s._v(" "),a("h2",{attrs:{id:"case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[s._v("#")]),s._v(" case")]),s._v(" "),a("h3",{attrs:{id:"词频统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词频统计"}},[s._v("#")]),s._v(" 词频统计")]),s._v(" "),a("blockquote",[a("p",[s._v("此示例来自 leetcode: "),a("a",{attrs:{href:"https://leetcode-cn.com/problems/word-frequency/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://leetcode-cn.com/problems/word-frequency/"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("word 内容如下")]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("the day is sunny the the\nthe sunny is is\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" words.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2,$1}'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("RText",{attrs:{text:"解释如下:"}}),s._v(" "),a("ul",[a("li",[a("code",[s._v("cat")]),s._v(" 命令查看 words.txt")]),s._v(" "),a("li",[a("code",[s._v("tr -s ' ' '\\n'")]),s._v("将空格都替换为换行 实现分词")]),s._v(" "),a("li",[a("code",[s._v("sort")]),s._v(" 排序将分好的词按照顺序排序")]),s._v(" "),a("li",[a("code",[s._v("uniq -c")]),s._v(" 统计重复次数(此步骤与上一步息息相关, -c 原理是字符串相同则加一, 如果不进行先排序的话将无法统计数目)")]),s._v(" "),a("li",[a("code",[s._v("sort -r")]),s._v(" 将数目倒序排列")]),s._v(" "),a("li",[a("code",[s._v("awk '{print $2,$1}'")]),s._v(" 将词频和词语调换位置打印出来")])]),s._v(" "),a("h3",{attrs:{id:"转置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转置文件"}},[s._v("#")]),s._v(" 转置文件")]),s._v(" "),a("blockquote",[a("p",[s._v("给定一个文件 file.txt, 转置它的内容。 你可以假设每行列数相同, 并且每个字段由 ' ' 分隔。 "),a("a",{attrs:{href:"https://leetcode-cn.com/problems/transpose-file/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://leetcode-cn.com/problems/transpose-file/"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("假设 file.txt 文件为")]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("name age\nalice 21\nryan 30\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Read from the file file.txt and print its transposed content to stdout.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取第一行, 然后用wc来获取列数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),s._v(" file.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用awk依次去输出文件的每一列的参数, 然后用xargs做转置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" $COLS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里col就是在代码里要替换的参数, 而它等于$i")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("col")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $col}'")]),s._v(" file.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("解释:")]),s._v(" "),a("ul",[a("li",[s._v("使用 head -1 file.txt 获取文件的第一行, 然后使用 wc -w 命令来计算单词数, 从而得到列数, 并将结果存储在变量 $COLS 中")]),s._v(" "),a("li",[s._v("使用一个循环, 从第一列到第 $COLS 列, 逐列处理文件。在每次循环中, 通过 awk 命令来提取文件中的一列, 然后使用 xargs 命令将这一列转置成行\n"),a("ul",[a("li",[s._v("使用 "),a("code",[s._v("awk")]),s._v(' 来处理文件 "file.txt"。通过 '),a("code",[s._v("-v")]),s._v(" 选项, 它将 shell 变量 col 设置为当前循环的列号 $i。然后, awk 脚本 {print $col} 用于打印当前列的内容")]),s._v(" "),a("li",[a("code",[s._v("|")]),s._v(": 这个管道符将 awk 命令的输出传递给下一个命令, 也就是 xargs")]),s._v(" "),a("li",[a("code",[s._v("xargs")]),s._v(": 这个命令用于接收来自前一个命令(awk)的输出, 并将其作为参数传递给指定的命令。在你的脚本中, 没有指定要执行的特定命令, 所以默认情况下, xargs 会将从 awk 获取的内容输出到终端")])])]),s._v(" "),a("li",[s._v("在 awk 命令中, 使用 -v 参数将 shell 变量 col 设置为当前列数 $i, 然后通过 $col 来访问该列的内容")])]),s._v(" "),a("h3",{attrs:{id:"提取-android-serial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取-android-serial"}},[s._v("#")]),s._v(" 提取 ANDROID SERIAL")]),s._v(" "),a("p",[s._v("从如下的字符提取 99161FFBA00AZ2")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("List of devices attached\n99161FFBA00AZ2 device\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("方法:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("adb devices "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR==2{print $1}'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在这个命令中, "),a("code",[s._v("adb devices")]),s._v(" 用于获取设备列表。然后, "),a("code",[s._v("awk")]),s._v(" 命令会处理输出结果。"),a("code",[s._v("NR==")]),s._v("2 表示只处理第二行, "),a("code",[s._v("print $1")]),s._v(" 表示打印第一列的内容, 即设备序列号。")]),s._v(" "),a("h3",{attrs:{id:"查看文件个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看文件个数"}},[s._v("#")]),s._v(" 查看文件个数")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("find <dir_path> -type f | wc -l")])]),s._v(" "),a("li",[a("code",[s._v("fd -t f -p <dir_path> | wc -l")]),s._v(": 统计当前目录下文件的数量. fixme")])]),s._v(" "),a("h3",{attrs:{id:"查询-assets-下面的文件-并按照-filesize-从大到小排列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-assets-下面的文件-并按照-filesize-从大到小排列"}},[s._v("#")]),s._v(" 查询 assets 下面的文件, 并按照 filesize 从大到小排列")]),s._v(" "),a("p",[a("code",[s._v("find ./**/src/main/res/drawable/** -type f -exec du -h {} + | sort -rh")]),s._v(" "),a("code",[s._v("find ./**/src/main/assets/** -type f -exec du -h {} + | sort -rh")]),s._v(" "),a("code",[s._v("fd -e png -E others -x du -h | sort -rh")])]),s._v(" "),a("p",[a("strong",[s._v("步骤解析")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("find assets -type f")]),s._v(": 在 assets 目录下查找所有类型为文件的项目")]),s._v(" "),a("li",[a("code",[s._v("-exec du -h {} +")]),s._v(": 对找到的文件执行 du -h 命令, 其中 du -h 用于显示文件大小, {} + 表示将多个文件作为参数传递给 du")]),s._v(" "),a("li",[a("code",[s._v("sort -rh")]),s._v(": 对 du 命令的输出按照文件大小进行逆序排序。 -r 表示逆序, -h 表示按照人类可读的方式排序(例如, K、M、G)")])]),s._v(" "),a("h3",{attrs:{id:"边下载视频-边看视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#边下载视频-边看视频"}},[s._v("#")]),s._v(" 边下载视频, 边看视频")]),s._v(" "),a("blockquote",[a("p",[s._v("管道")])]),s._v(" "),a("p",[a("code",[s._v("cat ${mp4} | tee local.mp4 | mpplayer -zoom -geometry 800x600+1000+200 -")])]),s._v(" "),a("p",[s._v("这个命令是一个 shell 命令, 主要功能是从一个 MP4 文件中读取数据, 并将数据输出到两个地方:")]),s._v(" "),a("ul",[a("li",[s._v("通过管道 "),a("code",[s._v("|")]),s._v(" 将数据发送给 tee 命令")]),s._v(" "),a("li",[s._v("通过管道 "),a("code",[s._v("|")]),s._v(" 将数据发送给 mpplayer 命令")])]),s._v(" "),a("p",[s._v("下面是命令中使用的各个部分的解释:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("${mp4}")]),s._v(": 这是一个 shell 变量, 表示 MP4 文件的路径或名称。在执行命令之前, 需要将 "),a("code",[s._v("${mp4}")]),s._v(" 替换为实际的 MP4 文件路径")]),s._v(" "),a("li",[a("code",[s._v("cat ${mp4}")]),s._v(": cat 命令用于将文件内容输出到标准输出(stdout)。${mp4} 是要读取的 MP4 文件的路径或名称。这个命令会将 MP4 文件的内容读取并输出到标准输出流")]),s._v(" "),a("li",[a("code",[s._v("tee local.mp4")]),s._v(": tee 命令用于从标准输入(stdin)读取数据, 并将数据输出到标准输出(stdout), 同时也将数据写入一个或多个文件。在这里, tee 命令将从前一个命令读取的 MP4 数据写入了一个名为 local.mp4 的文件中")]),s._v(" "),a("li",[a("code",[s._v("mpplayer -zoom -geometry 800x600+1000+200 -")]),s._v(": 这部分是另一个命令, mpplayer 是一个视频播放器程序。-zoom 和 -geometry 800x600+1000+200 是 mpplayer 的选项, 用于设置播放器窗口的缩放和位置。"),a("code",[s._v("-")]),s._v(" 表示从标准输入读取数据, 也就是从前一个命令的输出中读取 MP4 数据进行播放")])]),s._v(" "),a("h2",{attrs:{id:"link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[s._v("#")]),s._v(" link")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.fly63.com/tool/linux/",target:"_blank",rel:"noopener noreferrer"}},[s._v("linux 命令查询网站"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);a.default=r.exports}}]);