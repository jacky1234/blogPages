(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{347:function(a,t,r){"use strict";r.r(t);var s=r(4),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("awk 是一种处理文本文件的语言，是一个强大的文本分析工具。\nawk 通过提供编程语言的功能，如变量、数学运算、字符串处理等，使得对文本文件的分析和操作变得非常灵活和高效。")]),a._v(" "),t("p",[a._v("之所以叫 awk 是因为其取了三位创始人 Alfred Aho，Peter Weinberger, 和 Brian Kernighan 的 Family Name 的首字符。 "),t("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-awk.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("link"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"sctucture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sctucture"}},[a._v("#")]),a._v(" sctucture")]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v('awk \'BEGIN{ print "start" } pattern{ commands } END{ print "end" }\' file')])])]),a._v(" "),t("p",[a._v("一个awk脚本通常由：BEGIN语句块、能够使用模式匹配的通用语句块、END语句块3部分组成，这三个部分是可选的。任意一个部分都可以不出现在脚本中，脚本通常是被 单引号 或 双引号 中")]),a._v(" "),t("h2",{attrs:{id:"case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[a._v("#")]),a._v(" case")]),a._v(" "),t("ul",[t("li",[t("code",[a._v('echo -e "A line 1\\nA line 2" | awk \'BEGIN{ print "Start" } { print } END{ print "End" }\'')])]),a._v(" "),t("li",[t("code",[a._v("{print $2, $1}")]),a._v(": 交换第一列和第二列顺序")]),a._v(" "),t("li",[t("code",[a._v("'NR==2 {print $NF}")]),a._v(": 处理第二行，打印第二行最后一列内容")]),a._v(" "),t("li",[t("code",[a._v("rg -t log \"query url:[a-z|/]+ params:\" | LC_ALL=C awk -F 'query url:| params:' '{print $2}' | sort | uniq")]),a._v(" 提取请求url并归类总结去重")])]),a._v(" "),t("h3",{attrs:{id:"统计a出现的个数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#统计a出现的个数"}},[a._v("#")]),a._v(" 统计a出现的个数")]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v("awk '{ count += gsub(/a/, \"a\") } END { print count }' filename.txt")])])]),a._v(" "),t("ul",[t("li",[t("code",[a._v('gsub(/a/, "a")')]),a._v(": gsub 是 awk 用来替换字符串的函数，这里我们并不需要替换，只是用它来统计每一行中 a 字符的个数。")]),a._v(" "),t("li",[t("code",[a._v("/a/")]),a._v(" 是正则表达式，用来匹配字符 a。\n"),t("ul",[t("li",[a._v("每次 gsub 匹配到 a 时，返回匹配到的次数。")]),a._v(" "),t("li",[a._v("count += gsub(...): 把每一行中 a 的数量累加到 count 变量中。")])])]),a._v(" "),t("li",[t("code",[a._v("END { print count }")]),a._v(": 当 awk 处理完所有行后，输出 count 的最终值，也就是文件中字符 a 出现的总次数。")])]),a._v(" "),t("h3",{attrs:{id:"分割提取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分割提取"}},[a._v("#")]),a._v(" 分割提取")]),a._v(" "),t("p",[t("code",[a._v("awk -F 'query url:| params:' '{print $2}'")]),a._v(", reuslt: "),t("code",[a._v("mainlego_api_request_url")])]),a._v(" "),t("ol",[t("li",[a._v("-F 选项")])]),a._v(" "),t("p",[t("code",[a._v("-F")]),a._v(" 是 awk 的选项，用于指定分隔符。在这个例子中，"),t("code",[a._v("-F'query url:| params:'")]),a._v(" 意味着使用正则表达式 'query url:' 和 ' params:' 作为字段分隔符。| 在正则表达式中表示“或”，所以这两个字符串都作为分隔符。")]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("分隔符的作用\nawk 将输入行分成多个字段。每次遇到一个分隔符，就会把分隔符两边的内容分成不同的字段。")])]),a._v(" "),t("div",{staticClass:"language-log line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-log"}},[t("code",[a._v("query url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" params"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6000016")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("}")]),a._v(" type"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" POST\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("使用 -F'query url:| params:' 作为分隔符，awk 会把这行分割为三个字段：")]),a._v(" "),t("ul",[t("li",[a._v('第一个字段是 " "(query url: 之前的内容，空白部分)。')]),a._v(" "),t("li",[a._v('第二个字段是 "'),t("url",[a._v('"(query url: 和 params: 之间的内容，这就是我们要提取的 URL)。')])],1),a._v(" "),t("li",[a._v('第三个字段是 "{...}(params: 后面的内容)。')])]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("code",[a._v("{print $2}")])])]),a._v(" "),t("p",[t("code",[a._v("{print $2}")]),a._v(" 是 awk 的操作部分，表示输出第二个字段。")]),a._v(" "),t("p",[a._v("在我们这个例子中，第二个字段正好是 query url: 和 params: 之间的内容，也就是 URL 部分。")]),a._v(" "),t("h2",{attrs:{id:"link"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[a._v("#")]),a._v(" link")])])}),[],!1,null,null,null);t.default=e.exports}}]);