(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{349:function(e,t,a){"use strict";a.r(t);var s=a(4),l=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[t("code",[e._v("fd")]),e._v("(find entries in the filesystem) 是一个用于在命令行中快速查找文件和目录的工具, 而不需要使用复杂的正则表达式。它类似于 "),t("code",[e._v("find")]),e._v(" 命令, 但具有更简洁的语法和更友好的用户界面。可以与 shell 结合使用, 通过在命令行中指定搜索模式和目录路径, 来查找匹配的文件和目录。它支持递归搜索, 并提供一些有用的选项来过滤和定制搜索结果。")])]),e._v(" "),t("h2",{attrs:{id:"base"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base"}},[e._v("#")]),e._v(" base")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("fd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" 搜索模式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("目录"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("其中, 搜索模式 是要查找的文件或目录的名称模式。目录 是要在其中进行搜索的起始目录路径。如果未指定目录路径, 则默认从当前目录开始递归搜索。")]),e._v(" "),t("h2",{attrs:{id:"common-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#common-options"}},[e._v("#")]),e._v(" common options")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("man fd, fd --help")]),e._v(": help")]),e._v(" "),t("li",[t("code",[e._v("-i")]),e._v(": case-sensitive")]),e._v(" "),t("li",[t("code",[e._v("-a")]),e._v(": 搜索隐藏文件和目录")]),e._v(" "),t("li",[t("code",[e._v("-t <类型>")]),e._v(": 只搜索指定类型的文件或目录(例如, -t f 用于只搜索文件)")]),e._v(" "),t("li",[t("code",[e._v("-e <扩展名>")]),e._v(": 只搜索具有指定扩展名的文件")]),e._v(" "),t("li",[t("code",[e._v("-x <文件系统>")]),e._v(": 排除指定文件系统的搜索结果")]),e._v(" "),t("li",[t("code",[e._v("-s")]),e._v(": 按文件大小进行排序")]),e._v(" "),t("li",[t("code",[e._v("-0, --print0")]),e._v(": Separate search results by the null character (instead of newlines).")]),e._v(" "),t("li",[t("code",[e._v("-d, --max-depth")]),e._v(": Limit directory traversal to at most d levels of depth. By default, there is no limit on the search depth")]),e._v(" "),t("li",[t("code",[e._v("-p, --full-path")]),e._v(": By default, the search pattern is only matched against the filename (or directory name). Using this flag, the pattern is matched against the full path")]),e._v(" "),t("li",[t("code",[e._v("-E, --exclude")]),e._v(": Exclude files/directories that match the given glob pattern")])]),e._v(" "),t("h2",{attrs:{id:"case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[e._v("#")]),e._v(" case")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("fd -e log . ../")]),e._v(": search for all files inside the '../' directory, use a match-all pattern "),t("code",[e._v("fd . '../'")])]),e._v(" "),t("li",[t("code",[e._v("fd -e apk -0 . ../ | xargs -0 ls -lt | head -n 3")]),e._v(": apk 倒叙，仅显示3个")])]),e._v(" "),t("RText",{attrs:{text:"使用 glob pattern 来排除特定的文件或目录"}}),e._v(" "),t("ul",[t("li",[t("code",[e._v('fd -e txt --exclude "*.log"')]),e._v(": 这个命令会查找所有 .txt 文件，但排除所有以 .log 结尾的文件")]),e._v(" "),t("li",[t("code",[e._v('fd --exclude "node_modules"')]),e._v(": 排除某个特定目录下的文件")])])],1)}),[],!1,null,null,null);t.default=l.exports}}]);