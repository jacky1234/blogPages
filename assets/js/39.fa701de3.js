(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{358:function(_,t,c){"use strict";c.r(t);var e=c(4),i=Object(e.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"编译工具-gcc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译工具-gcc"}},[_._v("#")]),_._v(" 编译工具 gcc")]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("提示")]),_._v(" "),t("p",[t("code",[_._v("GCC")]),_._v("(GNU Compiler Collection)是一个广泛使用的开源编译器套件, 其中包含了多种编程语言的编译器, 其中包括 C++。GCC 是 C++开发者常用的编译工具之一, 下面是 GCC 的一些通常用法:\nGCC 提供了丰富的选项和功能, 可以根据需要进行更高级的编译配置和优化。可以通过 "),t("code",[_._v("man gcc")]),_._v(" 命令查看更多详细的文档和选项说明。")])]),_._v(" "),t("h3",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[_._v("#")]),_._v(" 常用命令")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("gcc --help")])]),_._v(" "),t("li",[t("code",[_._v("gcc -Wall hi.c -o hi")]),_._v(" 编译 hi.c 文件, 输出为 hi")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp")]),_._v(" 编译名为 input_file.cpp 的源文件, 并将输出的可执行文件命名为 output_file")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file1.cpp input_file2.cpp")]),_._v(" 编译多个源文件, 并将它们链接成一个可执行文件 output_file")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp -Wall -Wextra -O2")]),_._v(" 使用"),t("code",[_._v("-Wall")]),_._v(" 和"),t("code",[_._v("-Wextra")]),_._v(" 选项开启更多的警告信息, 并使用-O2 选项开启优化")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp -m32")]),_._v(" 使用"),t("code",[_._v("-m32")]),_._v(" 选项将编译为 32 位目标, 而不是默认的 64 位目标")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp -g")]),_._v(" 使用"),t("code",[_._v("-g")]),_._v(" 选项生成调试信息, 以便在调试过程中使用")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp -l library_name")]),_._v(" 使用"),t("code",[_._v("-l")]),_._v(" 选项链接外部库, 其中 library_name 是要链接的库名")]),_._v(" "),t("li",[t("code",[_._v("gcc -E input_file.cpp -o output_file.cpp")]),_._v(" 使用"),t("code",[_._v("-E")]),_._v(" 选项进行预处理, 并将预处理结果输出到 output_file.cpp 中")]),_._v(" "),t("li",[t("code",[_._v("gcc -S input_file.cpp -o output_file.s")]),_._v(" 使用"),t("code",[_._v("-S")]),_._v(" 选项将源文件编译为汇编代码, 并将汇编代码输出到 output_file.s 中")]),_._v(" "),t("li",[t("code",[_._v("gcc -o output_file input_file.cpp -target target_triplet")]),_._v(" 使用"),t("code",[_._v("-target")]),_._v(" 选项指定交叉编译的目标平台")])])])}),[],!1,null,null,null);t.default=i.exports}}]);