(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{373:function(e,n,v){"use strict";v.r(n);var t=v(4),a=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"common"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[e._v("#")]),e._v(" common")]),e._v(" "),n("p",[e._v("Apache Maven 是一个强大的项目构建和依赖管理工具, 它使用 mvn 命令行工具来执行各种构建任务。以下是一些常用的 mvn 命令:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("mvn clean")]),e._v(": 清除项目的目标目录(通常是 target 目录), 删除之前构建生成的文件。这通常用于在重新构建项目之前进行清理。")]),e._v(" "),n("li",[n("code",[e._v("mvn compile")]),e._v(": 编译项目的源代码, 将编译后的类文件存储在 target/classes 目录中。")]),e._v(" "),n("li",[n("code",[e._v("mvn test")]),e._v(": 运行项目的单元测试。Maven 将查找并执行项目中的测试类, 并生成测试报告。")]),e._v(" "),n("li",[n("code",[e._v("mvn package")]),e._v(": 打包项目, 通常将项目的编译输出打包成 JAR、WAR 或其他格式的归档文件, 存储在 target 目录中。")]),e._v(" "),n("li",[n("code",[e._v("mvn install")]),e._v(": 将项目构建结果安装到本地 Maven 仓库, 以便其他项目可以引用它。这对于多模块项目非常有用。")]),e._v(" "),n("li",[n("code",[e._v("mvn deploy")]),e._v(": 将项目构建结果发布到远程 Maven 仓库, 以供其他开发人员和项目使用。通常需要配置远程仓库的详细信息。")]),e._v(" "),n("li",[n("code",[e._v("mvn clean install")]),e._v(": 清理项目、编译代码并将构建结果安装到本地仓库。这是常用的组合命令, 用于构建并安装项目。")]),e._v(" "),n("li",[n("code",[e._v("mvn clean test")]),e._v(": 清理项目并运行单元测试。")]),e._v(" "),n("li",[n("code",[e._v("mvn clean package")]),e._v(": 清理项目并打包项目。通常用于生成可部署的构建文件。")]),e._v(" "),n("li",[n("code",[e._v("mvn clean install -DskipTests")]),e._v(": 清理项目、编译代码并将构建结果安装到本地仓库, 但跳过运行单元测试。")]),e._v(" "),n("li",[n("code",[e._v("mvn dependency:tree")]),e._v(": 显示项目的依赖树, 包括所有直接和间接依赖项。这对于解决依赖冲突问题非常有用。")]),e._v(" "),n("li",[n("code",[e._v("mvn archetype:generate")]),e._v(": 使用 "),n("code",[e._v("Maven Archetype")]),e._v(" 插件创建新项目的模板。你可以选择不同类型的模板来创建不同类型的项目。")]),e._v(" "),n("li",[n("code",[e._v("mvn help:effective-pom")]),e._v(": 显示项目的有效 POM(合并了所有继承和配置的 POM 部分), 这对于了解项目的实际配置非常有用。POM 为(Project Object Model)")])]),e._v(" "),n("p",[e._v("这些是一些常用的 mvn 命令, 你可以根据项目的需求和构建过程使用不同的命令。要了解更多关于 Maven 命令的详细信息, 你可以运行 mvn --help 或查阅 Maven 文档")]),e._v(" "),n("h2",{attrs:{id:"link"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[e._v("#")]),e._v(" link")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apache Maven Project"),n("OutboundLink")],1),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://maven.apache.org/run.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Running Apache Maven"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("pom\n"),n("ul",[n("li",[n("a",{attrs:{href:"https://maven.apache.org/pom.html#Inheritance",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inheritance"),n("OutboundLink")],1),e._v(" 依赖继承，统一配置")])])])])])])])}),[],!1,null,null,null);n.default=a.exports}}]);