(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{375:function(a,s,t){"use strict";t.r(s);var e=t(4),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[a._v("#")]),a._v(" init")]),a._v(" "),s("blockquote",[s("p",[a._v("FFmpeg is the leading multimedia framework, able to decode, encode, transcode, mux, demux, stream, filter and play pretty much anything that humans and machines have created. It supports the most obscure ancient formats up to the cutting edge. No matter if they were designed by some standards committee, the community or a corporation. It is also highly portable: FFmpeg compiles, runs, and passes our testing infrastructure FATE across Linux, Mac OS X, Microsoft Windows, the BSDs, Solaris, etc. under a wide variety of build environments, machine architectures, and configurations.")])]),a._v(" "),s("p",[a._v("更多内容可以见官网 "),s("a",{attrs:{href:"https://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ffmpeg"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"ffmpeg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg"}},[a._v("#")]),a._v(" ffmpeg")]),a._v(" "),s("RText",{attrs:{text:"main option"}}),a._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://ffmpeg.org/ffmpeg.html#toc-Main-options",target:"_blank",rel:"noopener noreferrer"}},[a._v("link"),s("OutboundLink")],1)])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-i")]),a._v(": input")]),a._v(" "),s("li",[s("code",[a._v("-vf")]),a._v(" filtergraph (output)\nCreate the filtergraph specified by filtergraph and use it to filter the stream.\nThis is an alias for "),s("code",[a._v("-filter:v")]),a._v(", see the -filter option.")]),a._v(" "),s("li",[s("code",[a._v("-af")]),a._v(": This is an alias for "),s("code",[a._v("-filter:a")])]),a._v(" "),s("li",[s("code",[a._v("-c:v")]),a._v("/"),s("code",[a._v("-codec:v")]),a._v(": codec (input/output,per-stream)\n"),s("ul",[s("li",[s("code",[a._v("copy")]),a._v(": 拷贝原有流")]),a._v(" "),s("li",[s("code",[a._v("libx264")]),a._v(": h264 转码")])])]),a._v(" "),s("li",[s("code",[a._v("-c:a")]),a._v("/"),s("code",[a._v("-codec:a")]),a._v(": 指定对音频编码处理")]),a._v(" "),s("li",[a._v("metadata\n"),s("ul",[s("li",[s("code",[a._v("-metadata <key>=<value>")]),a._v(": 指定 metadata")])])]),a._v(" "),s("li",[s("code",[a._v("-attach")])])]),a._v(" "),s("h2",{attrs:{id:"ffplay"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffplay"}},[a._v("#")]),a._v(" ffplay")]),a._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://ffmpeg.org/ffplay.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("ffplay"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("在播放视音频文件时, 可以通过下列快捷键来控制播放:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("q")]),a._v("/"),s("code",[a._v("ESC")]),a._v(": 退出播放")]),a._v(" "),s("li",[s("code",[a._v("f")]),a._v(": 全屏显示")]),a._v(" "),s("li",[s("code",[a._v("p")]),a._v("/空格键: 暂停/播放")]),a._v(" "),s("li",[s("code",[a._v("w")]),a._v(": 显示音频波形")]),a._v(" "),s("li",[s("code",[a._v("s")]),a._v(": 逐帧显示")]),a._v(" "),s("li",[a._v("左/右方向键: 向后/向前跳跃10秒")]),a._v(" "),s("li",[a._v("上/下方向键: 向后/向前跳跃1分钟")]),a._v(" "),s("li",[a._v("Page Down / Page Up: 向后/向前跳跃10分钟")]),a._v(" "),s("li",[a._v("鼠标点击屏幕: 跳转到指定位置")])]),a._v(" "),s("p",[a._v("此外, 在播放视频前, 还可以预设一些参数, 如:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-window_title title")]),a._v(": 设置窗口标题")]),a._v(" "),s("li",[s("code",[a._v("-loop number")]),a._v(": 设置播放循环次数")]),a._v(" "),s("li",[s("code",[a._v("-showmode mode")]),a._v(": 设置显示模式(0为显示视频, 1为显示音频波形, 2为显示音频频谱)")]),a._v(" "),s("li",[s("code",[a._v("-vf filtergraph")]),a._v(": 设置视频滤镜")]),a._v(" "),s("li",[s("code",[a._v("-af filtergraph")]),a._v(": 设置音频滤镜")])]),a._v(" "),s("h2",{attrs:{id:"ffprobe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffprobe"}},[a._v("#")]),a._v(" ffprobe")]),a._v(" "),s("p",[a._v("todo")]),a._v(" "),s("h2",{attrs:{id:"case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[a._v("#")]),a._v(" case")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("ffmpeg -i source2.mp4 -c:v libx264 -c:a copy result2.mp4")]),a._v("\n对视频进行 h264 转码, 拷贝音频数据")]),a._v(" "),s("li",[s("code",[a._v("ffmpeg -i source2.mp4 -c:v libx264 -ac 1 -ar 48000 result2.mp4")]),a._v("\n对视频进行 h264 转码, 对音频进行单声道, 48000 采样率处理")]),a._v(" "),s("li",[s("code",[a._v('ffmpeg -i in.avi -metadata title="my title" out.flv')]),a._v("\nsetting the title in the output file:")]),a._v(" "),s("li",[s("code",[a._v("ffmpeg -i IMG_8478-1.jpg -vf scale=iw/2:ih/2 output.jpg")]),a._v("\n压缩图片为原图一半")]),a._v(" "),s("li",[s("code",[a._v("ffmpeg -i INPUT -attach DejaVuSans.ttf -metadata:s:2 mimetype=application/x-truetype-font out.mkv")]),a._v(":\n"),s("code",[a._v("-metadata:s:2 mimetype=application/x-truetype-font")]),a._v(" 是用来设置附件的元数据。具体来说, 这个元数据指定了附件的类型为 TrueType 字体文件, 其 MIME 类型为 "),s("code",[a._v("application/x-truetype-font")]),a._v("。\n这里的"),s("code",[a._v("s:2")]),a._v(" 指定了元数据应该应用于第三个流(字幕、附件等), 并且 mimetype=application/x-truetype-font 指定了这个附件的 MIME 类型。")])]),a._v(" "),s("ol",[s("li",[a._v("压缩视频")])]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v('ffmpeg -i screen-20240208-114421.mp4 -vf "scale=720:1520,fps=30" -ss 00:00:12 2.mp4')])])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-ss 00:00:12")]),a._v(": 指定开始截取的时间点, 即从视频的第 12 秒开始截取")])]),a._v(" "),s("h3",{attrs:{id:"多个音频文件合并成一个-iamf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个音频文件合并成一个-iamf"}},[a._v("#")]),a._v(" 多个音频文件合并成一个 IAMF")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定了输入文件, 分别是前声道(front)、后声道(back)、中心声道(center)和低频声道(lfe)的音频文件")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" front.wav "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" back.wav "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" center.wav "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" lfe.wav\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定输入流的映射关系, 将每个输入文件的第一个流(音频流)映射到输出; 指定了音频编解码器为 Opus")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(":0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(":0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(":0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" opus\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建音频流组")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   id=1 指定了该音频流组的 ID, 这个 ID 可以在后续参数中引用。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   st=0:st=1:st=2:st=3 定义了流组中包含的音频流。每个 st 参数后面跟着一个数字, 代表该音频流在输入文件中的索引。这里的 st=0 表示将第一个输入文件(front.wav)的音频流加入到流组中")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-stream_group")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("iamf_audio_element:id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(":st"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":st"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(":st"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(":st"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(",\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在 IAMF 音频元素流组中设置了 demixing 参数, 指定了音频分离的参数 ID。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("demixing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("parameter_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("998")]),a._v(",\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置了重建增益参数, 用于控制输出音频的增益")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("recon_gain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("parameter_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("101")]),a._v(",\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置了不同层的声道布局, 分别是立体声(stereo)和 5.1 声道。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("layer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ch_layout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("stereo,\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("layer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ch_layout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.1")]),a._v(",\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-stream_group")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("iamf_mix_presentation:id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(":stg"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":annotations"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("en-us"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Mix_Presentation,\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("submix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("parameter_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(":parameter_rate"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("48000")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("element")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("stg"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":parameter_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(":annotations"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("en-us"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Scalable_Submix"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("layout")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("sound_system"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("stereo"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("layout")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("sound_system"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定了每个输出流的 ID, 这些 ID 将用于标识输出文件中的各个流。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-streamid")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-streamid")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(":1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-streamid")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(":2 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-streamid")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(":3 output.iamf\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h3",{attrs:{id:"合并ts为mp4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并ts为mp4"}},[a._v("#")]),a._v(" 合并ts为mp4")]),a._v(" "),s("blockquote",[s("p",[a._v("写一个shell, 解析M3U文件, 并下载所有的ts段到本地, 然后使用ffmpeg合并ts为mp4")])]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 检查参数是否正确")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$#")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ne")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Usage: '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$0")]),a._v(' <m3u_url> <output_file>"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义变量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("m3u_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("output_file")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 下载M3U文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$m3u_url")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" playlist.m3u\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取TS片段链接")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ts_urls")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^#'")]),a._v(" playlist.m3u"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 下载TS片段到本地")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("ts_url")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ts_urls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("filename")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("basename")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ts_url")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ts_url")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$filename")]),a._v('"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$?")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ne")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Failed to download '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ts_url")]),a._v('"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用FFmpeg合并TS为MP4")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"concat:'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" *.ts "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\n'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'|'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" copy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$output_file")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 清理临时文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" playlist.m3u *.ts\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Conversion completed successfully!"')]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br")])]),s("h2",{attrs:{id:"link"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[a._v("#")]),a._v(" link")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://ffmpeg.org/documentation.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Documentation"),s("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);