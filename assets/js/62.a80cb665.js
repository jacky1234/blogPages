(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{381:function(t,e,s){"use strict";s.r(e);var a=s(4),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("pip 是 Python 的包管理器, 用于安装、升级和管理 Python 包。它是 Python 的官方包管理工具, 提供了便捷的方式来获取、安装和管理第三方库和工具")])]),t._v(" "),e("h2",{attrs:{id:"command"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" command")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("pip --help")])]),t._v(" "),e("li",[e("code",[t._v("pip list")]),t._v(" 列出当前环境中已安装的所有包及其版本号")]),t._v(" "),e("li",[e("code",[t._v("pip freeze > requirements.txt")]),t._v(" 将包列表导出到 "),e("code",[t._v("requirements.txt")]),t._v(" 文件")]),t._v(" "),e("li",[e("code",[t._v("pip uninstall requests")]),t._v(" 卸载 requests 包")])]),t._v(" "),e("h3",{attrs:{id:"install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" install")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("pip install requests")]),t._v(" 安装名为 requests 的包")]),t._v(" "),e("li",[e("code",[t._v("pip install --upgrade requests")]),t._v(" 升级 requests 包")]),t._v(" "),e("li",[e("code",[t._v("pip install requests==$version")]),t._v(" 升级到指定版本")]),t._v(" "),e("li",[e("code",[t._v("pip install -e")]),t._v(': Install a project in editable mode (i.e. setuptools "develop mode") from a local project path or a VCS url.')]),t._v(" "),e("li",[e("code",[t._v("pip install -r requirements.txt")]),t._v(" 从 requirements.txt 文件中安装包")])]),t._v(" "),e("h2",{attrs:{id:"为指定编译器版本安装模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为指定编译器版本安装模块"}},[t._v("#")]),t._v(" 为指定编译器版本安装模块")]),t._v(" "),e("p",[t._v("在系统安装了多个 python3 编译器的场景下,  直接使用 pip 安装到不同的编译器中, 类似于下面这样的输出")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jacky1234/picArchieve@master/uPic/20230917_203717_MfJuxi.png",alt:""}})]),t._v(" "),e("p",[t._v("方案一: 全路径安装")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("$PYTHON -m pip install pytest")])])]),t._v(" "),e("p",[t._v("如: 使用 python3.9 版本指定安装")]),t._v(" "),e("ol",[e("li",[t._v("使用 "),e("code",[t._v("pyenv")]),t._v(" 切换 python 到 3.9 版本. pyenv 的使用可以点击: "),e("RouterLink",{attrs:{to:"/pages/dc1698/"}},[t._v("link")])],1),t._v(" "),e("li",[e("code",[t._v("python3 -m pip install pytest")]),t._v(",  安装完后, 截图如下")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jacky1234/picArchieve@master/uPic/20230919_115017_jrUGou.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"模块版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块版本控制"}},[t._v("#")]),t._v(" 模块版本控制")]),t._v(" "),e("p",[t._v("在通过"),e("code",[t._v("pip")]),t._v("安装 package 通常会对版本进行限制。以下是两种常用的版本控制方式:")]),t._v(" "),e("ul",[e("li",[e("RText",{attrs:{text:"安装特定版本的包"}}),t._v(", 可以使用 `package_name==version_number` 的语法。例如, 要安装 requests 包的 2.25.1 版本, 可以运行以下命令: `pip install 'requests==2.25.1'`\n")],1),t._v(" "),e("li",[e("RText",{attrs:{text:"安装符合特定版本范围的包"}}),t._v(", 可以使用 `package_name>=min_version,<=max_version` 的语法。例如, 要安装 `numpy` 包的版本在 1.18.0 到 1.19.0 之间(包括这两个版本), 可以运行以下命令: `pip install 'numpy>=1.18.0,<=1.19.0'`\n")],1),t._v(" "),e("li",[e("RText",{attrs:{text:"主版本控制"}}),t._v(":\n"),e("ul",[e("li",[e("code",[t._v("pyarrow~=13.0.0")]),t._v(": 这个规范表示你要求安装 pyarrow 包的版本号大于或等于 13.0.0, 但小于 14.0.0")])])],1)]),t._v(" "),e("p",[t._v("【注】"),e("RText",{attrs:{text:"使用引号将版本范围括起来。确保 < 等符号被正确解释为版本限制符号, 而不是 shell 的输入重定向符号",color:"red"}})],1),t._v(" "),e("p",[t._v("通过指定特定版本或版本范围, 您可以控制要安装的包的确切版本, 以满足您的项目需求或依赖关系。")]),t._v(" "),e("h2",{attrs:{id:"查看一个-package-可用版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看一个-package-可用版本"}},[t._v("#")]),t._v(" 查看一个 package 可用版本")]),t._v(" "),e("blockquote",[e("p",[t._v("通过查看网址: "),e("a",{attrs:{href:"https://pypi.org/search",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pypi.org/search"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" % pip search Jinja2\n\nERROR: XMLRPC request failed "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("code: -32500"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nRuntimeError: PyPI no longer supports "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pip search'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("or XML-RPC search"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(". Please use https://pypi.org/search "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("via a browser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" instead. See https://warehouse.pypa.io/api-reference/xml-rpc.html"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#deprecated-methods for more information.")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);