(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{386:function(t,v,e){"use strict";e.r(v);var i=e(4),r=Object(i.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("blockquote",[v("p",[t._v("vim linux 上使用较多的文本编辑器。 具有程序编辑的能力, 可以主动的以字体颜色辨别语法的正确性, 方便程序设计")])]),t._v(" "),v("ol",[v("li",[t._v("vim 提供了交互式教程工具 "),v("a",{attrs:{href:"#vimtutor"}},[t._v("vimtutor")]),t._v(", 这对熟悉 vim 基础用法非常有用")]),t._v(" "),v("li",[t._v("另外你可以通过在文件 "),v("code",[t._v("~/.vimrc")]),t._v(" 为 vim 设置配置. "),v("a",{attrs:{href:"https://www.freecodecamp.org/news/vimrc-configuration-guide-customize-your-vim-editor/",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"command"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" command")]),t._v(" "),v("blockquote",[v("p",[v("RouterLink",{attrs:{to:"/pages/805dee/"}},[t._v("link")])],1)]),t._v(" "),v("h2",{attrs:{id:"vimtutor"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vimtutor"}},[t._v("#")]),t._v(" vimtutor")]),t._v(" "),v("p",[v("code",[t._v("vimtutor")]),t._v(" 是一个内置于 Vim 编辑器中的交互式教程, 旨在帮助用户学习和掌握 Vim 编辑器的基本用法和功能。通过运行 vimtutor 命令, 您可以在终端中启动这个教程并按照提示进行学习。")]),t._v(" "),v("p",[t._v("以下是使用 "),v("code",[t._v("vimtutor")]),t._v(" 的一般步骤:")]),t._v(" "),v("ul",[v("li",[t._v("打开终端(命令行界面)。")]),t._v(" "),v("li",[t._v("输入 vimtutor 命令并按下回车键。")]),t._v(" "),v("li",[t._v("Vim 将以教程模式启动, 并在终端中显示教程的内容。")])]),t._v(" "),v("p",[t._v("教程内容会逐步引导您学习 Vim 的各种基本操作和编辑技巧, 包括移动光标、插入和删除文本、保存和退出文件等。您可以按照屏幕上的指示进行练习和操作。教程中的练习文件会被保存在您当前的工作目录中, 命名为 tutor。")]),t._v(" "),v("p",[t._v("请注意, vimtutor 教程相当详细, 需要耐心和时间来完成。建议您安排足够的时间来完成教程, 并根据需要进行实践和反复练习, 以便更好地掌握 Vim 编辑器的使用技巧。")]),t._v(" "),v("h2",{attrs:{id:"vimgrep"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vimgrep"}},[t._v("#")]),t._v(" vimgrep")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("vimgrep")]),t._v(" 是 Vim 中用于执行 "),v("RText",{attrs:{text:"全局搜索的命令",color:"red"}}),t._v(", 它可以在整个文件或多个文件中搜索指定的模式并将匹配的结果保存在 Vim 的 quickfix 列表中. 使用 "),v("code",[t._v("vimgrep")]),t._v(" 命令可以在 Vim 中执行全局搜索并轻松导航匹配的结果。它非常适用于处理包含大量文件的项目。")],1)]),t._v(" "),v("p",[v("strong",[t._v("vim 中启动 vimgrep 流程")])]),t._v(" "),v("ol",[v("li",[t._v("进入 Vim 编辑器, 打开一个文件。")]),t._v(" "),v("li",[t._v("进入命令行模式, 按下冒号(:)键。")]),t._v(" "),v("li",[t._v("输入以下命令格式: "),v("code",[t._v(":vimgrep /模式/ 文件列表")])])]),t._v(" "),v("ul",[v("li",[t._v("/模式/: 指定要搜索的模式, 可以是简单的文本或正则表达式。")]),t._v(" "),v("li",[t._v('文件列表: 指定要在其中搜索的文件列表, 其中"%"表示当前文件。你可以使用通配符来匹配多个文件, 例如 '),v("code",[t._v("**/*.txt")]),t._v(" 表示当前目录包括子目录所有以 "),v("code",[t._v(".txt")]),t._v(" 结尾的文件。")])]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("按下回车键, Vim 将执行搜索并将匹配的结果保存在 quickfix 列表中。")]),t._v(" "),v("li",[t._v("要打开 quickfix 窗口并查看搜索结果, 可以使用命令 "),v("code",[t._v(":copen")]),t._v("。")]),t._v(" "),v("li",[t._v("在 quickfix 窗口中, 你可以使用 "),v("code",[t._v(":cn")]),t._v(" 命令跳转到下一个匹配项, 使用 "),v("code",[t._v(":cp")]),t._v(" 命令跳转到上一个匹配项, 使用 "),v("code",[t._v(":cc")]),t._v(" 命令跳转到指定的匹配项, 使用 "),v("code",[t._v(":cnext")]),t._v(" 和 "),v("code",[t._v(":cprev")]),t._v(" 命令进行导航。")]),t._v(" "),v("li",[t._v("使用 "),v("code",[t._v(":cfilter {pattern}")]),t._v(": 使用 {pattern} 进行过滤, 只显示匹配 {pattern} 的行。这将更新 quickfix 列表为符合过滤条件的结果。")]),t._v(" "),v("li",[t._v("若要关闭 quickfix 窗口, 可以使用命令 "),v("code",[t._v(":cclose")]),t._v("。")])]),t._v(" "),v("h2",{attrs:{id:"vimgrepadd"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vimgrepadd"}},[t._v("#")]),t._v(" vimgrepadd")]),t._v(" "),v("p",[v("code",[t._v("vimgrep")]),t._v(" 和 "),v("code",[t._v("vimgrepadd")]),t._v(" 是 Vim 中用于进行全局搜索的命令, 但它们之间存在一些区别。")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("vimgrep")]),t._v(" 命令执行全局搜索, 并将搜索结果替换 quickfix 列表中的内容。这意味着每次执行 vimgrep 命令时, quickfix 列表将被新的搜索结果所覆盖。")]),t._v(" "),v("li",[v("code",[t._v("vimgrepadd")]),t._v(" 命令也执行全局搜索, 但它会将搜索结果追加到 quickfix 列表中, 而不是替换原有的内容。这样, 你可以在多次搜索之间保留和比较不同的搜索结果。")])]),t._v(" "),v("p",[t._v("使用 "),v("code",[t._v("vimgrepadd")]),t._v(" 的语法与 "),v("code",[t._v("vimgrep")]),t._v(" 相同, 例如 "),v("code",[t._v(":vimgrepadd PddVideoEngine xxx.log")]),t._v("。执行该命令后, 搜索结果将被添加到 quickfix 列表中。")]),t._v(" "),v("p",[t._v("你可以使用 "),v("code",[t._v(":copen")]),t._v(" 命令打开 quickfix 窗口查看所有的搜索结果, 并使用 "),v("code",[t._v(":cn")]),t._v(" 和 "),v("code",[t._v(":cp")]),t._v(" 命令分别跳转到下一个和上一个匹配项。")]),t._v(" "),v("p",[t._v("总结而言, "),v("code",[t._v("vimgrep")]),t._v(" 用于替换 quickfix 列表内容, 而 "),v("code",[t._v("vimgrepadd")]),t._v(" 用于追加到 quickfix 列表中, 保留多个搜索结果。你可以根据需要选择适合的命令来处理搜索结果。")]),t._v(" "),v("h2",{attrs:{id:"vimdiff"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vimdiff"}},[t._v("#")]),t._v(" vimdiff")]),t._v(" "),v("p",[t._v("todo "),v("a",{attrs:{href:"https://www.jianshu.com/p/5e359ac7d609",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/5e359ac7d609"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"plugin"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" plugin")]),t._v(" "),v("blockquote",[v("p",[v("a",{attrs:{href:"http://blog.fpliu.com/it/software/Vim/plugin/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("QFEnter: A vim plugin for intuitive file opening from Quickfix window. "),v("a",{attrs:{href:"https://github.com/vim-scripts/QFEnter",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),v("OutboundLink")],1),t._v(":")])]),t._v(" "),v("h3",{attrs:{id:"vim-plug"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vim-plug"}},[t._v("#")]),t._v(" vim-plug")]),t._v(" "),v("blockquote",[v("p",[t._v("Minimalist Vim Plugin Manager. "),v("a",{attrs:{href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),v("OutboundLink")],1)])]),t._v(" "),v("RText",{attrs:{text:"install vim-plug"}}),t._v(" "),v("div",{staticClass:"language-shell line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-fLo")]),t._v(" ~/.vim/autoload/plug.vim --create-dirs "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br")])]),v("p",[t._v("执行这个命令后, curl 将从 GitHub 下载 "),v("code",[t._v("plug.vim")]),t._v(" 文件并将其保存到 "),v("code",[t._v("~/.vim/autoload/plug.vim")]),t._v("。这样, 你就可以在 Vim 中使用 Vim-Plug 插件管理器来管理和安装其他插件了。要使用 Vim-Plug 安装插件, 你可以将插件列表添加到你的 .vimrc 文件中, 并在 Vim 中运行 "),v("code",[t._v(":PlugInstall")]),t._v(" 命令来安装它们。")]),t._v(" "),v("h2",{attrs:{id:"other"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#other"}},[t._v("#")]),t._v(" other")]),t._v(" "),v("h3",{attrs:{id:"正则表达式技巧"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式技巧"}},[t._v("#")]),t._v(" 正则表达式技巧")]),t._v(" "),v("ul",[v("li",[v("code",[t._v(":vimgrep 'aaaa\\|bbbb' %")]),t._v(": 搜索列出包含 aaaa, 或者 bbbb 的行, "),v("RText",{attrs:{text:"注意:",color:"red"}}),t._v(" 这里的 "),v("code",[t._v("|")]),t._v(" 需要转义")],1),t._v(" "),v("li",[v("code",[t._v("\\[17474.*\\(Report\\.PMMReport\\]\\|PlayTimeHelper\\]\\)")]),t._v(": 包含 xx 且包含 aa 或者 bb(包含 "),v("code",[t._v("[17474")]),t._v("且包含"),v("code",[t._v("Report.PMMReport]")]),t._v("或者"),v("code",[t._v("PlayTimeHelper]")]),t._v("的所有行)")]),t._v(" "),v("li",[v("code",[t._v(".*onReallyStart\\n.*onReallyStart")]),t._v(": 搜索连续两行出现 onReallyStart 的行")])]),t._v(" "),v("h3",{attrs:{id:"vim-查看另外的文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vim-查看另外的文件"}},[t._v("#")]),t._v(" vim 查看另外的文件")]),t._v(" "),v("blockquote",[v("p",[t._v("vim 在查看过程中, 打开另外一个文件")])]),t._v(" "),v("p",[t._v("在 Vim 中, 你可以在查看一个文件的同时打开另一个文件。这通常通过以下方法实现:")]),t._v(" "),v("ol",[v("li",[t._v("分割窗口: Vim 支持分割窗口的功能, 你可以在一个窗口中查看一个文件, 同时在另一个窗口中打开并查看另一个文件。以下是一些相关命令:")])]),t._v(" "),v("ul",[v("li",[t._v("打开新文件并水平分割窗口: "),v("code",[t._v(":sp filename")])]),t._v(" "),v("li",[t._v("打开新文件并垂直分割窗口: "),v("code",[t._v(":vsp filename")])]),t._v(" "),v("li",[t._v("切换窗口: "),v("code",[t._v("Ctrl-w Ctrl-w")])]),t._v(" "),v("li",[t._v("关闭窗口: "),v("code",[t._v(":q")])])]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("标签页: 另一种方法是使用标签页来查看多个文件。你可以使用以下命令:")])]),t._v(" "),v("ul",[v("li",[t._v("打开新文件并将其放入新标签页: "),v("code",[t._v(":tabe filename")])]),t._v(" "),v("li",[t._v("切换标签页: "),v("code",[t._v(":tabn (下一个标签页) 或 :tabp (上一个标签页)")])]),t._v(" "),v("li",[t._v("关闭标签页: "),v("code",[t._v(":tabc")])])]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("缓冲区: Vim 也支持多个缓冲区, 你可以使用以下命令在不同的缓冲区之间切换:")])]),t._v(" "),v("ul",[v("li",[t._v("打开新文件并加载到缓冲区: "),v("code",[t._v(":e filename")])]),t._v(" "),v("li",[t._v("切换缓冲区: "),v("code",[t._v(":bnext (下一个缓冲区) 或 :bprev (上一个缓冲区)")])]),t._v(" "),v("li",[t._v("关闭缓冲区: "),v("code",[t._v(":bd")])])]),t._v(" "),v("p",[t._v("这些方法中的选择取决于你的使用习惯和需求。你可以根据需要在不同的文件之间切换以提高编辑效率。")]),t._v(" "),v("h3",{attrs:{id:"quickfix"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#quickfix"}},[t._v("#")]),t._v(" quickFix")]),t._v(" "),v("h4",{attrs:{id:"多个-quickfix-窗口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多个-quickfix-窗口"}},[t._v("#")]),t._v(" 多个 quickFix 窗口")]),t._v(" "),v("p",[t._v("在 Vim 中, 你可以打开多个 Quickfix 窗口, 但需要借助一些插件或者自定义脚本来实现。Quickfix 窗口通常用于显示编译错误、代码搜索结果或其他类型的快速查找结果。以下是一种实现多个 Quickfix 窗口的方法:")]),t._v(" "),v("RText",{attrs:{text:"使用插件"}}),t._v(" "),v("p",[t._v("有一些 Vim 插件可以帮助你管理多个 Quickfix 窗口。一个常用的插件是 "),v("a",{attrs:{href:"https://github.com/vim-scripts/QFEnter",target:"_blank",rel:"noopener noreferrer"}},[t._v("qfenter"),v("OutboundLink")],1),t._v(", 它允许你在 Vim 中打开多个 Quickfix 窗口。你可以按照以下步骤安装它:")]),t._v(" "),v("ol",[v("li",[t._v("使用 Vim 插件管理器(如 Vim-Plug)安装 "),v("code",[t._v("qfenter")]),t._v(" 插件。将以下行添加到你的"),v("code",[t._v(".vimrc")]),t._v(" 文件中:")])]),t._v(" "),v("div",{staticClass:"language-shell line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[t._v("Plug "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yssl/QFEnter.vim'")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("ol",{attrs:{start:"2"}},[v("li",[v("p",[t._v("运行 Vim 并执行 "),v("code",[t._v(":PlugInstall")]),t._v(" 来安装插件。")])]),t._v(" "),v("li",[v("p",[t._v("使用:QFEnter 命令来打开新的 Quickfix 窗口。你可以在不同的 Quickfix 窗口中加载不同的 Quickfix 列表。")])])]),t._v(" "),v("ul",[v("li",[t._v("打开新的 Quickfix 窗口: "),v("code",[t._v(":QFEnter")])]),t._v(" "),v("li",[t._v("切换到不同的 Quickfix 窗口: "),v("code",[t._v(":QFEnter <number>")])])]),t._v(" "),v("p",[t._v("这样, 你就可以在同一 Vim 会话中管理多个 Quickfix 窗口了。")]),t._v(" "),v("p",[t._v("请注意, Vim 的基本功能中并没有直接支持打开多个 Quickfix 窗口, 所以需要使用插件来扩展这个功能。")]),t._v(" "),v("h3",{attrs:{id:"visual-模式复制问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#visual-模式复制问题"}},[t._v("#")]),t._v(" visual 模式复制问题")]),t._v(" "),v("blockquote",[v("p",[t._v("在使用 vim 的时候, 如果显示行号, 在 visual 模式下, 复制可能会有空格")])]),t._v(" "),v("p",[t._v("在 Vim 中, 在显示行号的情况下, 复制文本可能会包括行号后面的空格。这是因为行号是显示在文本前面的, 所以在 Visual 模式下选择文本时也会选择行号后的空格。")]),t._v(" "),v("p",[t._v("如果你希望在复制文本时不包括行号后的空格, 可以考虑在 Visual 模式下使用一些技巧来排除行号。以下是一些方法:")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("使用 set nu!命令切换行号显示: 你可以使用命令:set nu!来切换行号的显示。这个命令会在显示和隐藏行号之间切换。在不显示行号的情况下, 复制操作不会包括行号后的空格。当你需要查看行号时, 再次执行:set nu!即可。")])]),t._v(" "),v("li",[v("p",[t._v("使用正则表达式来选择文本: 在 Visual 模式下, 你可以使用正则表达式来选择文本, 以便排除行号。例如, 假设你的行号是左对齐的, 你可以使用正则表达式来选择非空格字符:")])])]),t._v(" "),v("ul",[v("li",[t._v("进入 Visual 模式: 按 V 键。")]),t._v(" "),v("li",[t._v("使用正则表达式选择文本: /\\S.*, 然后按 Enter。这将选择当前行中第一个非空格字符之后的文本。")])]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v('使用 Vim 插件: 有一些 Vim 插件可以帮助你更精确地选择文本, 以排除行号。例如, "vim-textobj-line" 插件允许你选择文本行, 而不包括行号。你可以使用插件管理器来安装这些插件。')])]),t._v(" "),v("p",[t._v("根据你的偏好和需求, 选择适合你的方法来避免在 Visual 模式下复制行号后的空格。")]),t._v(" "),v("h2",{attrs:{id:"link"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[t._v("#")]),t._v(" link")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://harttle.land/2016/08/08/vim-search-in-file.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-search-in-file"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/68111471",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎-精通 vim"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://vimhelp.org/pattern.txt.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vimhelp-pattern"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://vimhelp.org/vim_faq.txt.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vimhelp-faq"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1004716",target:"_blank",rel:"noopener noreferrer"}},[t._v("分享一些 vim 插件-Tencent"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"http://blog.fpliu.com/it/software/Vim/plugin/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-plug"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://freshman.tech/vim-quickfix-and-location-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-quickfix-and-location-list"),v("OutboundLink")],1)])])],1)}),[],!1,null,null,null);v.default=r.exports}}]);