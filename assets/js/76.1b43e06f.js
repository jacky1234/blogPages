(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{395:function(t,_,r){"use strict";r.r(_);var v=r(4),e=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"tcp-三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手"}},[t._v("#")]),t._v(" TCP 三次握手")]),t._v(" "),_("blockquote",[_("p",[t._v("为什么三次握手才可以初始化 Socket、序列号和窗口大小并建立 TCP 连接")])]),t._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"https://xiaolincoding.com/network/3_tcp/tcp_interview.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B-%E4%B8%8D%E6%98%AF%E4%B8%A4%E6%AC%A1%E3%80%81%E5%9B%9B%E6%AC%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),_("OutboundLink")],1)])]),t._v(" "),_("p",[t._v("简单来说, 三次握手的首要原因是为了 "),_("RText",{attrs:{text:"防止旧的重复连接初始化造成混乱",color:"red"}}),t._v("。接下来, 以三个方面分析三次握手的原因:")],1),t._v(" "),_("ul",[_("li",[t._v("三次握手才可以阻止重复历史连接的初始化(主要原因)")]),t._v(" "),_("li",[t._v("三次握手才可以同步双方的初始序列号")]),t._v(" "),_("li",[t._v("三次握手才可以避免资源浪费")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/format,png-20230309230525514.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"为什么挥手需要四次"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么挥手需要四次"}},[t._v("#")]),t._v(" 为什么挥手需要四次")]),t._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"https://xiaolincoding.com/network/3_tcp/tcp_interview.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%8C%A5%E6%89%8B%E9%9C%80%E8%A6%81%E5%9B%9B%E6%AC%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),_("OutboundLink")],1)])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/format,png-20230309230614791.png",alt:"四次挥手"}})]),t._v(" "),_("ul",[_("li",[t._v("客户端打算关闭连接, 此时会发送一个 TCP 首部 FIN 标志位被置为 1 的报文, 也即 FIN 报文, 之后客户端进入 FIN_WAIT_1 状态。")]),t._v(" "),_("li",[t._v("服务端收到该报文后, 就向客户端发送 ACK 应答报文, 接着服务端进入 CLOSE_WAIT 状态。")]),t._v(" "),_("li",[t._v("客户端收到服务端的 ACK 应答报文后, 之后进入 FIN_WAIT_2 状态。")]),t._v(" "),_("li",[t._v("等待服务端处理完数据后, 也向客户端发送 FIN 报文, 之后服务端进入 LAST_ACK 状态。")]),t._v(" "),_("li",[t._v("客户端收到服务端的 FIN 报文后, 回一个 ACK 应答报文, 之后进入 TIME_WAIT 状态")]),t._v(" "),_("li",[t._v("服务端收到了 ACK 应答报文后, 就进入了 CLOSE 状态, 至此服务端已经完成连接的关闭。")]),t._v(" "),_("li",[t._v("客户端在经过 2MSL 一段时间后, 自动进入 CLOSE 状态, 至此客户端也完成连接的关闭。")])]),t._v(" "),_("h2",{attrs:{id:"session-cookie"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#session-cookie"}},[t._v("#")]),t._v(" SESSION/COOKIE")]),t._v(" "),_("blockquote",[_("p",[_("RouterLink",{attrs:{to:"/pages/a7816d/"}},[t._v("jump")])],1)]),t._v(" "),_("h2",{attrs:{id:"ipv4-地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ipv4-地址"}},[t._v("#")]),t._v(" IPv4 地址")]),t._v(" "),_("p",[t._v("一个 IPv4 地址,可以使用 16 进制的输出代表. 这里分析下 16 进制各子节代表的意义, 以: "),_("code",[t._v("00 02 13 88 7f 00 00 01 00 00 00 00 00 00 00 00")]),t._v(" 为例")]),t._v(" "),_("p",[t._v("这个 16 进制的输出代表一个 IPv4 地址。让我们一起分析它:")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("00 02")]),t._v(": 这是表示地址族(Address Family)的字段, 其中 00 02 对应 AF_INET, 表示 IPv4 地址族。")]),t._v(" "),_("li",[_("code",[t._v("13 88")]),t._v(": 这是表示端口号的字段, 其中 13 88 对应 5000, 表示目标主机的端口号为 5000。")]),t._v(" "),_("li",[_("code",[t._v("7f 00 00 01")]),t._v(": 这是表示 IP 地址的字段, 其中 7f 00 00 01 对应 127.0.0.1, 表示目标主机的 IP 地址为 127.0.0.1, 即本地回环地址。")])]),t._v(" "),_("p",[t._v("所以, 这个 16 进制输出表示将连接目标主机的 IP 地址和端口号设置为 127.0.0.1:5000。")]),t._v(" "),_("p",[t._v("在代码中, 这个地址被用作 inet_pton 函数的参数, 将字符串形式的 IP 地址转换为二进制表示。这样就将目标主机的地址设置为 127.0.0.1, 以便与其建立连接。")]),t._v(" "),_("h2",{attrs:{id:"安全"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),_("h3",{attrs:{id:"重放攻击"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重放攻击"}},[t._v("#")]),t._v(" 重放攻击")]),t._v(" "),_("p",[t._v("重放攻击(Replay Attack)是一种网络攻击，攻击者截获并重复发送合法的通信数据，以伪装成合法用户执行重复的交易或操作。它并不是简单的多次请求，而是攻击者利用截获的合法请求数据在不修改其内容的情况下重新发送，以达到非法访问或操作的目的。")]),t._v(" "),_("RText",{attrs:{text:"重放攻击的工作原理"}}),t._v(" "),_("ul",[_("li",[t._v("截获合法请求: 攻击者在网络上截获合法用户发送的请求数据包。")]),t._v(" "),_("li",[t._v("重发截获的数据: 攻击者在稍后时间将这些截获的数据包重新发送到服务器。")]),t._v(" "),_("li",[t._v("服务器处理请求: 如果服务器没有适当的防重放机制，就会认为重发的请求是合法的，从而处理这个请求，导致重复操作。")])]),t._v(" "),_("h2",{attrs:{id:"什么是-syn-攻击-如何避免-syn-攻击"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是-syn-攻击-如何避免-syn-攻击"}},[t._v("#")]),t._v(" 什么是 SYN 攻击？如何避免 SYN 攻击？")]),t._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"https://xiaolincoding.com/network/3_tcp/tcp_interview.html#%E4%BB%80%E4%B9%88%E6%98%AF-syn-%E6%94%BB%E5%87%BB-%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D-syn-%E6%94%BB%E5%87%BB",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是 SYN 攻击？如何避免 SYN 攻击？"),_("OutboundLink")],1)])])],1)}),[],!1,null,null,null);_.default=e.exports}}]);